{
	"info": {
		"_postman_id": "ceb89b74-b220-45f6-90eb-251b635f71f0",
		"name": "Snowflake Warehouse API",
		"description": "The Snowflake Warehouse API is a REST API that you can use to access, customize and manage virtual warehouse in a Snowflake account.\n\nContact Support:\n Name: Snowflake, Inc.\n Email: support@snowflake.com",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "28868798",
		"_collection_link": "https://snowflake.postman.co/workspace/PrPr-Fast-Follow-up~221950c9-2cfb-4efc-9682-eac740a73ea5/collection/28868798-ceb89b74-b220-45f6-90eb-251b635f71f0?action=share&source=collection_link&creator=28868798"
	},
	"item": [
		{
			"name": "api",
			"item": [
				{
					"name": "v2",
					"item": [
						{
							"name": "warehouses",
							"item": [
								{
									"name": "{name}",
									"item": [
										{
											"name": "Describe warehouse",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/warehouses/:name",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"warehouses",
														":name"
													],
													"variable": [
														{
															"key": "name",
															"value": "\"C:\"",
															"description": "(Required) "
														}
													]
												},
												"description": "Describes the warehouse, show information of the chosen warehouse. Equivalent to DESCRIBE WAREHOUSE in SQL."
											},
											"response": [
												{
													"name": "successful",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/warehouses/:name",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"warehouses",
																":name"
															],
															"variable": [
																{
																	"key": "name"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"name\": \"p\",\n  \"warehouse_type\": \"<string>\",\n  \"warehouse_size\": \"<string>\",\n  \"wait_for_completion\": \"false\",\n  \"max_cluster_count\": \"<integer>\",\n  \"min_cluster_count\": \"<integer>\",\n  \"scaling_policy\": \"<string>\",\n  \"auto_suspend\": \"<integer>\",\n  \"auto_resume\": \"true\",\n  \"initially_suspended\": \"true\",\n  \"resource_monitor\": \"CWEM\",\n  \"comment\": \"<string>\",\n  \"enable_query_acceleration\": \"false\",\n  \"query_acceleration_max_scale_factor\": \"<integer>\",\n  \"max_concurrency_level\": \"<integer>\",\n  \"statement_queued_timeout_in_seconds\": \"<integer>\",\n  \"statement_timeout_in_seconds\": \"<integer>\",\n  \"tags\": {\n    \"deserunt0f\": \"<string>\"\n  },\n  \"type\": \"<string>\",\n  \"size\": \"<string>\",\n  \"state\": \"<string>\",\n  \"started_clusters\": \"<integer>\",\n  \"running\": \"<integer>\",\n  \"queued\": \"<integer>\",\n  \"is_default\": \"<boolean>\",\n  \"is_current\": \"<boolean>\",\n  \"available\": \"<string>\",\n  \"provisioning\": \"<string>\",\n  \"quiescing\": \"<string>\",\n  \"other\": \"<string>\",\n  \"created_on\": \"<dateTime>\",\n  \"resumed_on\": \"<dateTime>\",\n  \"updated_on\": \"<dateTime>\",\n  \"owner\": \"<string>\",\n  \"budget\": \"<string>\",\n  \"kind\": \"<string>\"\n}"
												},
												{
													"name": "Bad Request. The request payload is invalid or malformed. This happens if the application didn't send the correct request payload. The response body may include the error code and message indicating the actual cause. The application must reconstruct the r",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/warehouses/:name",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"warehouses",
																":name"
															],
															"variable": [
																{
																	"key": "name"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"error_code\": \"<string>\",\n  \"request_id\": \"<string>\"\n}"
												},
												{
													"name": "Unauthorized. The request is not authorized. This happens if the attached access token is invalid or missing. The response body may include the error code and message indicating the actual cause, e.g., expired, invalid token. The application must obtain a",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/warehouses/:name",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"warehouses",
																":name"
															],
															"variable": [
																{
																	"key": "name"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"error_code\": \"<string>\",\n  \"request_id\": \"<string>\"\n}"
												},
												{
													"name": "Forbidden. The request is forbidden. This can also happen if the request is made even if the API is not enabled.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/warehouses/:name",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"warehouses",
																":name"
															],
															"variable": [
																{
																	"key": "name"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"error_code\": \"<string>\",\n  \"request_id\": \"<string>\"\n}"
												},
												{
													"name": "Not Found. The request endpoint is not valid. This happens if the API endpoint does not exist, or if the API is not enabled.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/warehouses/:name",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"warehouses",
																":name"
															],
															"variable": [
																{
																	"key": "name"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"error_code\": \"<string>\",\n  \"request_id\": \"<string>\"\n}"
												},
												{
													"name": "Method Not Allowed. The request method doesn't match the supported API. This happens, for example, if the application calls the API with GET method but the endpoint accepts only POST.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/warehouses/:name",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"warehouses",
																":name"
															],
															"variable": [
																{
																	"key": "name"
																}
															]
														}
													},
													"status": "Method Not Allowed",
													"code": 405,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"error_code\": \"<string>\",\n  \"request_id\": \"<string>\"\n}"
												},
												{
													"name": "Conflict. The requested operation could not be performed due to a conflicting state that could not be resolved. This usually happens when a CREATE request was performed when there is a pre-existing resource with the same name, and also without one of the ",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/warehouses/:name",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"warehouses",
																":name"
															],
															"variable": [
																{
																	"key": "name"
																}
															]
														}
													},
													"status": "Conflict",
													"code": 409,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"error_code\": \"<string>\",\n  \"request_id\": \"<string>\"\n}"
												},
												{
													"name": "Gone. This error is primarily intended to assist the task of web maintenance by notifying the recipient that the resource is intentionally unavailable.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/warehouses/:name",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"warehouses",
																":name"
															],
															"variable": [
																{
																	"key": "name"
																}
															]
														}
													},
													"status": "Gone",
													"code": 410,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"error_code\": \"<string>\",\n  \"request_id\": \"<string>\"\n}"
												},
												{
													"name": "Limit Exceeded. The number of requests hit the rate limit. The application must slow down the frequency of hitting the API endpoints.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/warehouses/:name",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"warehouses",
																":name"
															],
															"variable": [
																{
																	"key": "name"
																}
															]
														}
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"error_code\": \"<string>\",\n  \"request_id\": \"<string>\"\n}"
												},
												{
													"name": "Internal Server Error. The server hit an unrecoverable system error. The response body may include the error code and message for further guidance. The application owner may need to reach out the customer support.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/warehouses/:name",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"warehouses",
																":name"
															],
															"variable": [
																{
																	"key": "name"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"error_code\": \"<string>\",\n  \"request_id\": \"<string>\"\n}"
												},
												{
													"name": "Service Unavailable. The request was not processed due to server side timeouts. The application may retry with backoff. The jittered backoff is recommended.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/warehouses/:name",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"warehouses",
																":name"
															],
															"variable": [
																{
																	"key": "name"
																}
															]
														}
													},
													"status": "Service Unavailable",
													"code": 503,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"error_code\": \"<string>\",\n  \"request_id\": \"<string>\"\n}"
												},
												{
													"name": "Gateway Timeout. The request was not processed due to server side timeouts. The application may retry with backoff. The jittered backoff is recommended.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/warehouses/:name",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"warehouses",
																":name"
															],
															"variable": [
																{
																	"key": "name"
																}
															]
														}
													},
													"status": "Gateway Timeout",
													"code": 504,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"error_code\": \"<string>\",\n  \"request_id\": \"<string>\"\n}"
												}
											]
										},
										{
											"name": "Drop warehouse",
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/warehouses/:name?ifExists=false",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"warehouses",
														":name"
													],
													"query": [
														{
															"key": "ifExists",
															"value": "false"
														}
													],
													"variable": [
														{
															"key": "name",
															"value": "\"C:\"",
															"description": "(Required) "
														}
													]
												},
												"description": "Removes the specified virtual warehouse from the system. Equivalent to DROP WAREHOUSE in SQL."
											},
											"response": [
												{
													"name": "Successful",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/warehouses/:name?ifExists=false",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"warehouses",
																":name"
															],
															"query": [
																{
																	"key": "ifExists",
																	"value": "false"
																}
															],
															"variable": [
																{
																	"key": "name"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"status\": \"<string>\"\n}"
												},
												{
													"name": "Bad Request. The request payload is invalid or malformed. This happens if the application didn't send the correct request payload. The response body may include the error code and message indicating the actual cause. The application must reconstruct the r",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/warehouses/:name?ifExists=false",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"warehouses",
																":name"
															],
															"query": [
																{
																	"key": "ifExists",
																	"value": "false"
																}
															],
															"variable": [
																{
																	"key": "name"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"error_code\": \"<string>\",\n  \"request_id\": \"<string>\"\n}"
												},
												{
													"name": "Unauthorized. The request is not authorized. This happens if the attached access token is invalid or missing. The response body may include the error code and message indicating the actual cause, e.g., expired, invalid token. The application must obtain a",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/warehouses/:name?ifExists=false",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"warehouses",
																":name"
															],
															"query": [
																{
																	"key": "ifExists",
																	"value": "false"
																}
															],
															"variable": [
																{
																	"key": "name"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"error_code\": \"<string>\",\n  \"request_id\": \"<string>\"\n}"
												},
												{
													"name": "Forbidden. The request is forbidden. This can also happen if the request is made even if the API is not enabled.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/warehouses/:name?ifExists=false",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"warehouses",
																":name"
															],
															"query": [
																{
																	"key": "ifExists",
																	"value": "false"
																}
															],
															"variable": [
																{
																	"key": "name"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"error_code\": \"<string>\",\n  \"request_id\": \"<string>\"\n}"
												},
												{
													"name": "Not Found. The request endpoint is not valid. This happens if the API endpoint does not exist, or if the API is not enabled.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/warehouses/:name?ifExists=false",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"warehouses",
																":name"
															],
															"query": [
																{
																	"key": "ifExists",
																	"value": "false"
																}
															],
															"variable": [
																{
																	"key": "name"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"error_code\": \"<string>\",\n  \"request_id\": \"<string>\"\n}"
												},
												{
													"name": "Method Not Allowed. The request method doesn't match the supported API. This happens, for example, if the application calls the API with GET method but the endpoint accepts only POST.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/warehouses/:name?ifExists=false",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"warehouses",
																":name"
															],
															"query": [
																{
																	"key": "ifExists",
																	"value": "false"
																}
															],
															"variable": [
																{
																	"key": "name"
																}
															]
														}
													},
													"status": "Method Not Allowed",
													"code": 405,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"error_code\": \"<string>\",\n  \"request_id\": \"<string>\"\n}"
												},
												{
													"name": "Conflict. The requested operation could not be performed due to a conflicting state that could not be resolved. This usually happens when a CREATE request was performed when there is a pre-existing resource with the same name, and also without one of the ",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/warehouses/:name?ifExists=false",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"warehouses",
																":name"
															],
															"query": [
																{
																	"key": "ifExists",
																	"value": "false"
																}
															],
															"variable": [
																{
																	"key": "name"
																}
															]
														}
													},
													"status": "Conflict",
													"code": 409,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"error_code\": \"<string>\",\n  \"request_id\": \"<string>\"\n}"
												},
												{
													"name": "Gone. This error is primarily intended to assist the task of web maintenance by notifying the recipient that the resource is intentionally unavailable.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/warehouses/:name?ifExists=false",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"warehouses",
																":name"
															],
															"query": [
																{
																	"key": "ifExists",
																	"value": "false"
																}
															],
															"variable": [
																{
																	"key": "name"
																}
															]
														}
													},
													"status": "Gone",
													"code": 410,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"error_code\": \"<string>\",\n  \"request_id\": \"<string>\"\n}"
												},
												{
													"name": "Limit Exceeded. The number of requests hit the rate limit. The application must slow down the frequency of hitting the API endpoints.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/warehouses/:name?ifExists=false",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"warehouses",
																":name"
															],
															"query": [
																{
																	"key": "ifExists",
																	"value": "false"
																}
															],
															"variable": [
																{
																	"key": "name"
																}
															]
														}
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"error_code\": \"<string>\",\n  \"request_id\": \"<string>\"\n}"
												},
												{
													"name": "Internal Server Error. The server hit an unrecoverable system error. The response body may include the error code and message for further guidance. The application owner may need to reach out the customer support.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/warehouses/:name?ifExists=false",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"warehouses",
																":name"
															],
															"query": [
																{
																	"key": "ifExists",
																	"value": "false"
																}
															],
															"variable": [
																{
																	"key": "name"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"error_code\": \"<string>\",\n  \"request_id\": \"<string>\"\n}"
												},
												{
													"name": "Service Unavailable. The request was not processed due to server side timeouts. The application may retry with backoff. The jittered backoff is recommended.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/warehouses/:name?ifExists=false",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"warehouses",
																":name"
															],
															"query": [
																{
																	"key": "ifExists",
																	"value": "false"
																}
															],
															"variable": [
																{
																	"key": "name"
																}
															]
														}
													},
													"status": "Service Unavailable",
													"code": 503,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"error_code\": \"<string>\",\n  \"request_id\": \"<string>\"\n}"
												},
												{
													"name": "Gateway Timeout. The request was not processed due to server side timeouts. The application may retry with backoff. The jittered backoff is recommended.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/warehouses/:name?ifExists=false",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"warehouses",
																":name"
															],
															"query": [
																{
																	"key": "ifExists",
																	"value": "false"
																}
															],
															"variable": [
																{
																	"key": "name"
																}
															]
														}
													},
													"status": "Gateway Timeout",
													"code": 504,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"error_code\": \"<string>\",\n  \"request_id\": \"<string>\"\n}"
												}
											]
										},
										{
											"name": "update properties of the warehouse",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"p\",\n  \"warehouse_type\": \"<string>\",\n  \"warehouse_size\": \"<string>\",\n  \"wait_for_completion\": \"false\",\n  \"max_cluster_count\": \"<integer>\",\n  \"min_cluster_count\": \"<integer>\",\n  \"scaling_policy\": \"<string>\",\n  \"auto_suspend\": \"<integer>\",\n  \"auto_resume\": \"true\",\n  \"initially_suspended\": \"true\",\n  \"resource_monitor\": \"CWEM\",\n  \"comment\": \"<string>\",\n  \"enable_query_acceleration\": \"false\",\n  \"query_acceleration_max_scale_factor\": \"<integer>\",\n  \"max_concurrency_level\": \"<integer>\",\n  \"statement_queued_timeout_in_seconds\": \"<integer>\",\n  \"statement_timeout_in_seconds\": \"<integer>\",\n  \"tags\": {\n    \"deserunt0f\": \"<string>\"\n  },\n  \"type\": \"<string>\",\n  \"size\": \"<string>\",\n  \"state\": \"<string>\",\n  \"started_clusters\": \"<integer>\",\n  \"running\": \"<integer>\",\n  \"queued\": \"<integer>\",\n  \"is_default\": \"<boolean>\",\n  \"is_current\": \"<boolean>\",\n  \"available\": \"<string>\",\n  \"provisioning\": \"<string>\",\n  \"quiescing\": \"<string>\",\n  \"other\": \"<string>\",\n  \"created_on\": \"<dateTime>\",\n  \"resumed_on\": \"<dateTime>\",\n  \"updated_on\": \"<dateTime>\",\n  \"owner\": \"<string>\",\n  \"budget\": \"<string>\",\n  \"kind\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/warehouses/:name?ifExists=false",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"warehouses",
														":name"
													],
													"query": [
														{
															"key": "ifExists",
															"value": "false"
														}
													],
													"variable": [
														{
															"key": "name",
															"value": "\"C:\"",
															"description": "(Required) "
														}
													]
												},
												"description": "Specifies one or more properties/parameters to set for the warehouse. If one parameter is not specified, it will be unset, which means it will be reset to default."
											},
											"response": [
												{
													"name": "Successful",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"p\",\n  \"warehouse_type\": \"<string>\",\n  \"warehouse_size\": \"<string>\",\n  \"wait_for_completion\": \"false\",\n  \"max_cluster_count\": \"<integer>\",\n  \"min_cluster_count\": \"<integer>\",\n  \"scaling_policy\": \"<string>\",\n  \"auto_suspend\": \"<integer>\",\n  \"auto_resume\": \"true\",\n  \"initially_suspended\": \"true\",\n  \"resource_monitor\": \"CWEM\",\n  \"comment\": \"<string>\",\n  \"enable_query_acceleration\": \"false\",\n  \"query_acceleration_max_scale_factor\": \"<integer>\",\n  \"max_concurrency_level\": \"<integer>\",\n  \"statement_queued_timeout_in_seconds\": \"<integer>\",\n  \"statement_timeout_in_seconds\": \"<integer>\",\n  \"tags\": {\n    \"deserunt0f\": \"<string>\"\n  },\n  \"type\": \"<string>\",\n  \"size\": \"<string>\",\n  \"state\": \"<string>\",\n  \"started_clusters\": \"<integer>\",\n  \"running\": \"<integer>\",\n  \"queued\": \"<integer>\",\n  \"is_default\": \"<boolean>\",\n  \"is_current\": \"<boolean>\",\n  \"available\": \"<string>\",\n  \"provisioning\": \"<string>\",\n  \"quiescing\": \"<string>\",\n  \"other\": \"<string>\",\n  \"created_on\": \"<dateTime>\",\n  \"resumed_on\": \"<dateTime>\",\n  \"updated_on\": \"<dateTime>\",\n  \"owner\": \"<string>\",\n  \"budget\": \"<string>\",\n  \"kind\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/warehouses/:name?ifExists=false",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"warehouses",
																":name"
															],
															"query": [
																{
																	"key": "ifExists",
																	"value": "false"
																}
															],
															"variable": [
																{
																	"key": "name"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"status\": \"<string>\"\n}"
												},
												{
													"name": "Bad Request. The request payload is invalid or malformed. This happens if the application didn't send the correct request payload. The response body may include the error code and message indicating the actual cause. The application must reconstruct the r",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"p\",\n  \"warehouse_type\": \"<string>\",\n  \"warehouse_size\": \"<string>\",\n  \"wait_for_completion\": \"false\",\n  \"max_cluster_count\": \"<integer>\",\n  \"min_cluster_count\": \"<integer>\",\n  \"scaling_policy\": \"<string>\",\n  \"auto_suspend\": \"<integer>\",\n  \"auto_resume\": \"true\",\n  \"initially_suspended\": \"true\",\n  \"resource_monitor\": \"CWEM\",\n  \"comment\": \"<string>\",\n  \"enable_query_acceleration\": \"false\",\n  \"query_acceleration_max_scale_factor\": \"<integer>\",\n  \"max_concurrency_level\": \"<integer>\",\n  \"statement_queued_timeout_in_seconds\": \"<integer>\",\n  \"statement_timeout_in_seconds\": \"<integer>\",\n  \"tags\": {\n    \"deserunt0f\": \"<string>\"\n  },\n  \"type\": \"<string>\",\n  \"size\": \"<string>\",\n  \"state\": \"<string>\",\n  \"started_clusters\": \"<integer>\",\n  \"running\": \"<integer>\",\n  \"queued\": \"<integer>\",\n  \"is_default\": \"<boolean>\",\n  \"is_current\": \"<boolean>\",\n  \"available\": \"<string>\",\n  \"provisioning\": \"<string>\",\n  \"quiescing\": \"<string>\",\n  \"other\": \"<string>\",\n  \"created_on\": \"<dateTime>\",\n  \"resumed_on\": \"<dateTime>\",\n  \"updated_on\": \"<dateTime>\",\n  \"owner\": \"<string>\",\n  \"budget\": \"<string>\",\n  \"kind\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/warehouses/:name?ifExists=false",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"warehouses",
																":name"
															],
															"query": [
																{
																	"key": "ifExists",
																	"value": "false"
																}
															],
															"variable": [
																{
																	"key": "name"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"error_code\": \"<string>\",\n  \"request_id\": \"<string>\"\n}"
												},
												{
													"name": "Unauthorized. The request is not authorized. This happens if the attached access token is invalid or missing. The response body may include the error code and message indicating the actual cause, e.g., expired, invalid token. The application must obtain a",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"p\",\n  \"warehouse_type\": \"<string>\",\n  \"warehouse_size\": \"<string>\",\n  \"wait_for_completion\": \"false\",\n  \"max_cluster_count\": \"<integer>\",\n  \"min_cluster_count\": \"<integer>\",\n  \"scaling_policy\": \"<string>\",\n  \"auto_suspend\": \"<integer>\",\n  \"auto_resume\": \"true\",\n  \"initially_suspended\": \"true\",\n  \"resource_monitor\": \"CWEM\",\n  \"comment\": \"<string>\",\n  \"enable_query_acceleration\": \"false\",\n  \"query_acceleration_max_scale_factor\": \"<integer>\",\n  \"max_concurrency_level\": \"<integer>\",\n  \"statement_queued_timeout_in_seconds\": \"<integer>\",\n  \"statement_timeout_in_seconds\": \"<integer>\",\n  \"tags\": {\n    \"deserunt0f\": \"<string>\"\n  },\n  \"type\": \"<string>\",\n  \"size\": \"<string>\",\n  \"state\": \"<string>\",\n  \"started_clusters\": \"<integer>\",\n  \"running\": \"<integer>\",\n  \"queued\": \"<integer>\",\n  \"is_default\": \"<boolean>\",\n  \"is_current\": \"<boolean>\",\n  \"available\": \"<string>\",\n  \"provisioning\": \"<string>\",\n  \"quiescing\": \"<string>\",\n  \"other\": \"<string>\",\n  \"created_on\": \"<dateTime>\",\n  \"resumed_on\": \"<dateTime>\",\n  \"updated_on\": \"<dateTime>\",\n  \"owner\": \"<string>\",\n  \"budget\": \"<string>\",\n  \"kind\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/warehouses/:name?ifExists=false",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"warehouses",
																":name"
															],
															"query": [
																{
																	"key": "ifExists",
																	"value": "false"
																}
															],
															"variable": [
																{
																	"key": "name"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"error_code\": \"<string>\",\n  \"request_id\": \"<string>\"\n}"
												},
												{
													"name": "Forbidden. The request is forbidden. This can also happen if the request is made even if the API is not enabled.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"p\",\n  \"warehouse_type\": \"<string>\",\n  \"warehouse_size\": \"<string>\",\n  \"wait_for_completion\": \"false\",\n  \"max_cluster_count\": \"<integer>\",\n  \"min_cluster_count\": \"<integer>\",\n  \"scaling_policy\": \"<string>\",\n  \"auto_suspend\": \"<integer>\",\n  \"auto_resume\": \"true\",\n  \"initially_suspended\": \"true\",\n  \"resource_monitor\": \"CWEM\",\n  \"comment\": \"<string>\",\n  \"enable_query_acceleration\": \"false\",\n  \"query_acceleration_max_scale_factor\": \"<integer>\",\n  \"max_concurrency_level\": \"<integer>\",\n  \"statement_queued_timeout_in_seconds\": \"<integer>\",\n  \"statement_timeout_in_seconds\": \"<integer>\",\n  \"tags\": {\n    \"deserunt0f\": \"<string>\"\n  },\n  \"type\": \"<string>\",\n  \"size\": \"<string>\",\n  \"state\": \"<string>\",\n  \"started_clusters\": \"<integer>\",\n  \"running\": \"<integer>\",\n  \"queued\": \"<integer>\",\n  \"is_default\": \"<boolean>\",\n  \"is_current\": \"<boolean>\",\n  \"available\": \"<string>\",\n  \"provisioning\": \"<string>\",\n  \"quiescing\": \"<string>\",\n  \"other\": \"<string>\",\n  \"created_on\": \"<dateTime>\",\n  \"resumed_on\": \"<dateTime>\",\n  \"updated_on\": \"<dateTime>\",\n  \"owner\": \"<string>\",\n  \"budget\": \"<string>\",\n  \"kind\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/warehouses/:name?ifExists=false",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"warehouses",
																":name"
															],
															"query": [
																{
																	"key": "ifExists",
																	"value": "false"
																}
															],
															"variable": [
																{
																	"key": "name"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"error_code\": \"<string>\",\n  \"request_id\": \"<string>\"\n}"
												},
												{
													"name": "Not Found. The request endpoint is not valid. This happens if the API endpoint does not exist, or if the API is not enabled.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"p\",\n  \"warehouse_type\": \"<string>\",\n  \"warehouse_size\": \"<string>\",\n  \"wait_for_completion\": \"false\",\n  \"max_cluster_count\": \"<integer>\",\n  \"min_cluster_count\": \"<integer>\",\n  \"scaling_policy\": \"<string>\",\n  \"auto_suspend\": \"<integer>\",\n  \"auto_resume\": \"true\",\n  \"initially_suspended\": \"true\",\n  \"resource_monitor\": \"CWEM\",\n  \"comment\": \"<string>\",\n  \"enable_query_acceleration\": \"false\",\n  \"query_acceleration_max_scale_factor\": \"<integer>\",\n  \"max_concurrency_level\": \"<integer>\",\n  \"statement_queued_timeout_in_seconds\": \"<integer>\",\n  \"statement_timeout_in_seconds\": \"<integer>\",\n  \"tags\": {\n    \"deserunt0f\": \"<string>\"\n  },\n  \"type\": \"<string>\",\n  \"size\": \"<string>\",\n  \"state\": \"<string>\",\n  \"started_clusters\": \"<integer>\",\n  \"running\": \"<integer>\",\n  \"queued\": \"<integer>\",\n  \"is_default\": \"<boolean>\",\n  \"is_current\": \"<boolean>\",\n  \"available\": \"<string>\",\n  \"provisioning\": \"<string>\",\n  \"quiescing\": \"<string>\",\n  \"other\": \"<string>\",\n  \"created_on\": \"<dateTime>\",\n  \"resumed_on\": \"<dateTime>\",\n  \"updated_on\": \"<dateTime>\",\n  \"owner\": \"<string>\",\n  \"budget\": \"<string>\",\n  \"kind\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/warehouses/:name?ifExists=false",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"warehouses",
																":name"
															],
															"query": [
																{
																	"key": "ifExists",
																	"value": "false"
																}
															],
															"variable": [
																{
																	"key": "name"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"error_code\": \"<string>\",\n  \"request_id\": \"<string>\"\n}"
												},
												{
													"name": "Method Not Allowed. The request method doesn't match the supported API. This happens, for example, if the application calls the API with GET method but the endpoint accepts only POST.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"p\",\n  \"warehouse_type\": \"<string>\",\n  \"warehouse_size\": \"<string>\",\n  \"wait_for_completion\": \"false\",\n  \"max_cluster_count\": \"<integer>\",\n  \"min_cluster_count\": \"<integer>\",\n  \"scaling_policy\": \"<string>\",\n  \"auto_suspend\": \"<integer>\",\n  \"auto_resume\": \"true\",\n  \"initially_suspended\": \"true\",\n  \"resource_monitor\": \"CWEM\",\n  \"comment\": \"<string>\",\n  \"enable_query_acceleration\": \"false\",\n  \"query_acceleration_max_scale_factor\": \"<integer>\",\n  \"max_concurrency_level\": \"<integer>\",\n  \"statement_queued_timeout_in_seconds\": \"<integer>\",\n  \"statement_timeout_in_seconds\": \"<integer>\",\n  \"tags\": {\n    \"deserunt0f\": \"<string>\"\n  },\n  \"type\": \"<string>\",\n  \"size\": \"<string>\",\n  \"state\": \"<string>\",\n  \"started_clusters\": \"<integer>\",\n  \"running\": \"<integer>\",\n  \"queued\": \"<integer>\",\n  \"is_default\": \"<boolean>\",\n  \"is_current\": \"<boolean>\",\n  \"available\": \"<string>\",\n  \"provisioning\": \"<string>\",\n  \"quiescing\": \"<string>\",\n  \"other\": \"<string>\",\n  \"created_on\": \"<dateTime>\",\n  \"resumed_on\": \"<dateTime>\",\n  \"updated_on\": \"<dateTime>\",\n  \"owner\": \"<string>\",\n  \"budget\": \"<string>\",\n  \"kind\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/warehouses/:name?ifExists=false",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"warehouses",
																":name"
															],
															"query": [
																{
																	"key": "ifExists",
																	"value": "false"
																}
															],
															"variable": [
																{
																	"key": "name"
																}
															]
														}
													},
													"status": "Method Not Allowed",
													"code": 405,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"error_code\": \"<string>\",\n  \"request_id\": \"<string>\"\n}"
												},
												{
													"name": "Conflict. The requested operation could not be performed due to a conflicting state that could not be resolved. This usually happens when a CREATE request was performed when there is a pre-existing resource with the same name, and also without one of the ",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"p\",\n  \"warehouse_type\": \"<string>\",\n  \"warehouse_size\": \"<string>\",\n  \"wait_for_completion\": \"false\",\n  \"max_cluster_count\": \"<integer>\",\n  \"min_cluster_count\": \"<integer>\",\n  \"scaling_policy\": \"<string>\",\n  \"auto_suspend\": \"<integer>\",\n  \"auto_resume\": \"true\",\n  \"initially_suspended\": \"true\",\n  \"resource_monitor\": \"CWEM\",\n  \"comment\": \"<string>\",\n  \"enable_query_acceleration\": \"false\",\n  \"query_acceleration_max_scale_factor\": \"<integer>\",\n  \"max_concurrency_level\": \"<integer>\",\n  \"statement_queued_timeout_in_seconds\": \"<integer>\",\n  \"statement_timeout_in_seconds\": \"<integer>\",\n  \"tags\": {\n    \"deserunt0f\": \"<string>\"\n  },\n  \"type\": \"<string>\",\n  \"size\": \"<string>\",\n  \"state\": \"<string>\",\n  \"started_clusters\": \"<integer>\",\n  \"running\": \"<integer>\",\n  \"queued\": \"<integer>\",\n  \"is_default\": \"<boolean>\",\n  \"is_current\": \"<boolean>\",\n  \"available\": \"<string>\",\n  \"provisioning\": \"<string>\",\n  \"quiescing\": \"<string>\",\n  \"other\": \"<string>\",\n  \"created_on\": \"<dateTime>\",\n  \"resumed_on\": \"<dateTime>\",\n  \"updated_on\": \"<dateTime>\",\n  \"owner\": \"<string>\",\n  \"budget\": \"<string>\",\n  \"kind\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/warehouses/:name?ifExists=false",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"warehouses",
																":name"
															],
															"query": [
																{
																	"key": "ifExists",
																	"value": "false"
																}
															],
															"variable": [
																{
																	"key": "name"
																}
															]
														}
													},
													"status": "Conflict",
													"code": 409,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"error_code\": \"<string>\",\n  \"request_id\": \"<string>\"\n}"
												},
												{
													"name": "Gone. This error is primarily intended to assist the task of web maintenance by notifying the recipient that the resource is intentionally unavailable.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"p\",\n  \"warehouse_type\": \"<string>\",\n  \"warehouse_size\": \"<string>\",\n  \"wait_for_completion\": \"false\",\n  \"max_cluster_count\": \"<integer>\",\n  \"min_cluster_count\": \"<integer>\",\n  \"scaling_policy\": \"<string>\",\n  \"auto_suspend\": \"<integer>\",\n  \"auto_resume\": \"true\",\n  \"initially_suspended\": \"true\",\n  \"resource_monitor\": \"CWEM\",\n  \"comment\": \"<string>\",\n  \"enable_query_acceleration\": \"false\",\n  \"query_acceleration_max_scale_factor\": \"<integer>\",\n  \"max_concurrency_level\": \"<integer>\",\n  \"statement_queued_timeout_in_seconds\": \"<integer>\",\n  \"statement_timeout_in_seconds\": \"<integer>\",\n  \"tags\": {\n    \"deserunt0f\": \"<string>\"\n  },\n  \"type\": \"<string>\",\n  \"size\": \"<string>\",\n  \"state\": \"<string>\",\n  \"started_clusters\": \"<integer>\",\n  \"running\": \"<integer>\",\n  \"queued\": \"<integer>\",\n  \"is_default\": \"<boolean>\",\n  \"is_current\": \"<boolean>\",\n  \"available\": \"<string>\",\n  \"provisioning\": \"<string>\",\n  \"quiescing\": \"<string>\",\n  \"other\": \"<string>\",\n  \"created_on\": \"<dateTime>\",\n  \"resumed_on\": \"<dateTime>\",\n  \"updated_on\": \"<dateTime>\",\n  \"owner\": \"<string>\",\n  \"budget\": \"<string>\",\n  \"kind\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/warehouses/:name?ifExists=false",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"warehouses",
																":name"
															],
															"query": [
																{
																	"key": "ifExists",
																	"value": "false"
																}
															],
															"variable": [
																{
																	"key": "name"
																}
															]
														}
													},
													"status": "Gone",
													"code": 410,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"error_code\": \"<string>\",\n  \"request_id\": \"<string>\"\n}"
												},
												{
													"name": "Limit Exceeded. The number of requests hit the rate limit. The application must slow down the frequency of hitting the API endpoints.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"p\",\n  \"warehouse_type\": \"<string>\",\n  \"warehouse_size\": \"<string>\",\n  \"wait_for_completion\": \"false\",\n  \"max_cluster_count\": \"<integer>\",\n  \"min_cluster_count\": \"<integer>\",\n  \"scaling_policy\": \"<string>\",\n  \"auto_suspend\": \"<integer>\",\n  \"auto_resume\": \"true\",\n  \"initially_suspended\": \"true\",\n  \"resource_monitor\": \"CWEM\",\n  \"comment\": \"<string>\",\n  \"enable_query_acceleration\": \"false\",\n  \"query_acceleration_max_scale_factor\": \"<integer>\",\n  \"max_concurrency_level\": \"<integer>\",\n  \"statement_queued_timeout_in_seconds\": \"<integer>\",\n  \"statement_timeout_in_seconds\": \"<integer>\",\n  \"tags\": {\n    \"deserunt0f\": \"<string>\"\n  },\n  \"type\": \"<string>\",\n  \"size\": \"<string>\",\n  \"state\": \"<string>\",\n  \"started_clusters\": \"<integer>\",\n  \"running\": \"<integer>\",\n  \"queued\": \"<integer>\",\n  \"is_default\": \"<boolean>\",\n  \"is_current\": \"<boolean>\",\n  \"available\": \"<string>\",\n  \"provisioning\": \"<string>\",\n  \"quiescing\": \"<string>\",\n  \"other\": \"<string>\",\n  \"created_on\": \"<dateTime>\",\n  \"resumed_on\": \"<dateTime>\",\n  \"updated_on\": \"<dateTime>\",\n  \"owner\": \"<string>\",\n  \"budget\": \"<string>\",\n  \"kind\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/warehouses/:name?ifExists=false",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"warehouses",
																":name"
															],
															"query": [
																{
																	"key": "ifExists",
																	"value": "false"
																}
															],
															"variable": [
																{
																	"key": "name"
																}
															]
														}
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"error_code\": \"<string>\",\n  \"request_id\": \"<string>\"\n}"
												},
												{
													"name": "Internal Server Error. The server hit an unrecoverable system error. The response body may include the error code and message for further guidance. The application owner may need to reach out the customer support.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"p\",\n  \"warehouse_type\": \"<string>\",\n  \"warehouse_size\": \"<string>\",\n  \"wait_for_completion\": \"false\",\n  \"max_cluster_count\": \"<integer>\",\n  \"min_cluster_count\": \"<integer>\",\n  \"scaling_policy\": \"<string>\",\n  \"auto_suspend\": \"<integer>\",\n  \"auto_resume\": \"true\",\n  \"initially_suspended\": \"true\",\n  \"resource_monitor\": \"CWEM\",\n  \"comment\": \"<string>\",\n  \"enable_query_acceleration\": \"false\",\n  \"query_acceleration_max_scale_factor\": \"<integer>\",\n  \"max_concurrency_level\": \"<integer>\",\n  \"statement_queued_timeout_in_seconds\": \"<integer>\",\n  \"statement_timeout_in_seconds\": \"<integer>\",\n  \"tags\": {\n    \"deserunt0f\": \"<string>\"\n  },\n  \"type\": \"<string>\",\n  \"size\": \"<string>\",\n  \"state\": \"<string>\",\n  \"started_clusters\": \"<integer>\",\n  \"running\": \"<integer>\",\n  \"queued\": \"<integer>\",\n  \"is_default\": \"<boolean>\",\n  \"is_current\": \"<boolean>\",\n  \"available\": \"<string>\",\n  \"provisioning\": \"<string>\",\n  \"quiescing\": \"<string>\",\n  \"other\": \"<string>\",\n  \"created_on\": \"<dateTime>\",\n  \"resumed_on\": \"<dateTime>\",\n  \"updated_on\": \"<dateTime>\",\n  \"owner\": \"<string>\",\n  \"budget\": \"<string>\",\n  \"kind\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/warehouses/:name?ifExists=false",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"warehouses",
																":name"
															],
															"query": [
																{
																	"key": "ifExists",
																	"value": "false"
																}
															],
															"variable": [
																{
																	"key": "name"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"error_code\": \"<string>\",\n  \"request_id\": \"<string>\"\n}"
												},
												{
													"name": "Service Unavailable. The request was not processed due to server side timeouts. The application may retry with backoff. The jittered backoff is recommended.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"p\",\n  \"warehouse_type\": \"<string>\",\n  \"warehouse_size\": \"<string>\",\n  \"wait_for_completion\": \"false\",\n  \"max_cluster_count\": \"<integer>\",\n  \"min_cluster_count\": \"<integer>\",\n  \"scaling_policy\": \"<string>\",\n  \"auto_suspend\": \"<integer>\",\n  \"auto_resume\": \"true\",\n  \"initially_suspended\": \"true\",\n  \"resource_monitor\": \"CWEM\",\n  \"comment\": \"<string>\",\n  \"enable_query_acceleration\": \"false\",\n  \"query_acceleration_max_scale_factor\": \"<integer>\",\n  \"max_concurrency_level\": \"<integer>\",\n  \"statement_queued_timeout_in_seconds\": \"<integer>\",\n  \"statement_timeout_in_seconds\": \"<integer>\",\n  \"tags\": {\n    \"deserunt0f\": \"<string>\"\n  },\n  \"type\": \"<string>\",\n  \"size\": \"<string>\",\n  \"state\": \"<string>\",\n  \"started_clusters\": \"<integer>\",\n  \"running\": \"<integer>\",\n  \"queued\": \"<integer>\",\n  \"is_default\": \"<boolean>\",\n  \"is_current\": \"<boolean>\",\n  \"available\": \"<string>\",\n  \"provisioning\": \"<string>\",\n  \"quiescing\": \"<string>\",\n  \"other\": \"<string>\",\n  \"created_on\": \"<dateTime>\",\n  \"resumed_on\": \"<dateTime>\",\n  \"updated_on\": \"<dateTime>\",\n  \"owner\": \"<string>\",\n  \"budget\": \"<string>\",\n  \"kind\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/warehouses/:name?ifExists=false",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"warehouses",
																":name"
															],
															"query": [
																{
																	"key": "ifExists",
																	"value": "false"
																}
															],
															"variable": [
																{
																	"key": "name"
																}
															]
														}
													},
													"status": "Service Unavailable",
													"code": 503,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"error_code\": \"<string>\",\n  \"request_id\": \"<string>\"\n}"
												},
												{
													"name": "Gateway Timeout. The request was not processed due to server side timeouts. The application may retry with backoff. The jittered backoff is recommended.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"p\",\n  \"warehouse_type\": \"<string>\",\n  \"warehouse_size\": \"<string>\",\n  \"wait_for_completion\": \"false\",\n  \"max_cluster_count\": \"<integer>\",\n  \"min_cluster_count\": \"<integer>\",\n  \"scaling_policy\": \"<string>\",\n  \"auto_suspend\": \"<integer>\",\n  \"auto_resume\": \"true\",\n  \"initially_suspended\": \"true\",\n  \"resource_monitor\": \"CWEM\",\n  \"comment\": \"<string>\",\n  \"enable_query_acceleration\": \"false\",\n  \"query_acceleration_max_scale_factor\": \"<integer>\",\n  \"max_concurrency_level\": \"<integer>\",\n  \"statement_queued_timeout_in_seconds\": \"<integer>\",\n  \"statement_timeout_in_seconds\": \"<integer>\",\n  \"tags\": {\n    \"deserunt0f\": \"<string>\"\n  },\n  \"type\": \"<string>\",\n  \"size\": \"<string>\",\n  \"state\": \"<string>\",\n  \"started_clusters\": \"<integer>\",\n  \"running\": \"<integer>\",\n  \"queued\": \"<integer>\",\n  \"is_default\": \"<boolean>\",\n  \"is_current\": \"<boolean>\",\n  \"available\": \"<string>\",\n  \"provisioning\": \"<string>\",\n  \"quiescing\": \"<string>\",\n  \"other\": \"<string>\",\n  \"created_on\": \"<dateTime>\",\n  \"resumed_on\": \"<dateTime>\",\n  \"updated_on\": \"<dateTime>\",\n  \"owner\": \"<string>\",\n  \"budget\": \"<string>\",\n  \"kind\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/warehouses/:name?ifExists=false",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"warehouses",
																":name"
															],
															"query": [
																{
																	"key": "ifExists",
																	"value": "false"
																}
															],
															"variable": [
																{
																	"key": "name"
																}
															]
														}
													},
													"status": "Gateway Timeout",
													"code": 504,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"error_code\": \"<string>\",\n  \"request_id\": \"<string>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "{name}:resume",
									"item": [
										{
											"name": "resume warehouse",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/warehouses/{{name}}:resume?ifExists=false",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"warehouses",
														"{{name}}:resume"
													],
													"query": [
														{
															"key": "ifExists",
															"value": "false"
														}
													]
												},
												"description": "Bring current warehouse to a usable ‘Running’ state by provisioning compute resources if current warehouse is suspended."
											},
											"response": [
												{
													"name": "Successful",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/warehouses/{{name}}:resume?ifExists=false",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"warehouses",
																"{{name}}:resume"
															],
															"query": [
																{
																	"key": "ifExists",
																	"value": "false"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"status\": \"<string>\"\n}"
												},
												{
													"name": "Bad Request. The request payload is invalid or malformed. This happens if the application didn't send the correct request payload. The response body may include the error code and message indicating the actual cause. The application must reconstruct the r",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/warehouses/{{name}}:resume?ifExists=false",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"warehouses",
																"{{name}}:resume"
															],
															"query": [
																{
																	"key": "ifExists",
																	"value": "false"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"error_code\": \"<string>\",\n  \"request_id\": \"<string>\"\n}"
												},
												{
													"name": "Unauthorized. The request is not authorized. This happens if the attached access token is invalid or missing. The response body may include the error code and message indicating the actual cause, e.g., expired, invalid token. The application must obtain a",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/warehouses/{{name}}:resume?ifExists=false",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"warehouses",
																"{{name}}:resume"
															],
															"query": [
																{
																	"key": "ifExists",
																	"value": "false"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"error_code\": \"<string>\",\n  \"request_id\": \"<string>\"\n}"
												},
												{
													"name": "Forbidden. The request is forbidden. This can also happen if the request is made even if the API is not enabled.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/warehouses/{{name}}:resume?ifExists=false",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"warehouses",
																"{{name}}:resume"
															],
															"query": [
																{
																	"key": "ifExists",
																	"value": "false"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"error_code\": \"<string>\",\n  \"request_id\": \"<string>\"\n}"
												},
												{
													"name": "Not Found. The request endpoint is not valid. This happens if the API endpoint does not exist, or if the API is not enabled.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/warehouses/{{name}}:resume?ifExists=false",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"warehouses",
																"{{name}}:resume"
															],
															"query": [
																{
																	"key": "ifExists",
																	"value": "false"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"error_code\": \"<string>\",\n  \"request_id\": \"<string>\"\n}"
												},
												{
													"name": "Method Not Allowed. The request method doesn't match the supported API. This happens, for example, if the application calls the API with GET method but the endpoint accepts only POST.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/warehouses/{{name}}:resume?ifExists=false",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"warehouses",
																"{{name}}:resume"
															],
															"query": [
																{
																	"key": "ifExists",
																	"value": "false"
																}
															]
														}
													},
													"status": "Method Not Allowed",
													"code": 405,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"error_code\": \"<string>\",\n  \"request_id\": \"<string>\"\n}"
												},
												{
													"name": "Conflict. The requested operation could not be performed due to a conflicting state that could not be resolved. This usually happens when a CREATE request was performed when there is a pre-existing resource with the same name, and also without one of the ",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/warehouses/{{name}}:resume?ifExists=false",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"warehouses",
																"{{name}}:resume"
															],
															"query": [
																{
																	"key": "ifExists",
																	"value": "false"
																}
															]
														}
													},
													"status": "Conflict",
													"code": 409,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"error_code\": \"<string>\",\n  \"request_id\": \"<string>\"\n}"
												},
												{
													"name": "Gone. This error is primarily intended to assist the task of web maintenance by notifying the recipient that the resource is intentionally unavailable.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/warehouses/{{name}}:resume?ifExists=false",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"warehouses",
																"{{name}}:resume"
															],
															"query": [
																{
																	"key": "ifExists",
																	"value": "false"
																}
															]
														}
													},
													"status": "Gone",
													"code": 410,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"error_code\": \"<string>\",\n  \"request_id\": \"<string>\"\n}"
												},
												{
													"name": "Limit Exceeded. The number of requests hit the rate limit. The application must slow down the frequency of hitting the API endpoints.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/warehouses/{{name}}:resume?ifExists=false",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"warehouses",
																"{{name}}:resume"
															],
															"query": [
																{
																	"key": "ifExists",
																	"value": "false"
																}
															]
														}
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"error_code\": \"<string>\",\n  \"request_id\": \"<string>\"\n}"
												},
												{
													"name": "Internal Server Error. The server hit an unrecoverable system error. The response body may include the error code and message for further guidance. The application owner may need to reach out the customer support.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/warehouses/{{name}}:resume?ifExists=false",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"warehouses",
																"{{name}}:resume"
															],
															"query": [
																{
																	"key": "ifExists",
																	"value": "false"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"error_code\": \"<string>\",\n  \"request_id\": \"<string>\"\n}"
												},
												{
													"name": "Service Unavailable. The request was not processed due to server side timeouts. The application may retry with backoff. The jittered backoff is recommended.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/warehouses/{{name}}:resume?ifExists=false",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"warehouses",
																"{{name}}:resume"
															],
															"query": [
																{
																	"key": "ifExists",
																	"value": "false"
																}
															]
														}
													},
													"status": "Service Unavailable",
													"code": 503,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"error_code\": \"<string>\",\n  \"request_id\": \"<string>\"\n}"
												},
												{
													"name": "Gateway Timeout. The request was not processed due to server side timeouts. The application may retry with backoff. The jittered backoff is recommended.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/warehouses/{{name}}:resume?ifExists=false",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"warehouses",
																"{{name}}:resume"
															],
															"query": [
																{
																	"key": "ifExists",
																	"value": "false"
																}
															]
														}
													},
													"status": "Gateway Timeout",
													"code": 504,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"error_code\": \"<string>\",\n  \"request_id\": \"<string>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "{name}:suspend",
									"item": [
										{
											"name": "suspend warehouse",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/warehouses/{{name}}:suspend?ifExists=false",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"warehouses",
														"{{name}}:suspend"
													],
													"query": [
														{
															"key": "ifExists",
															"value": "false"
														}
													]
												},
												"description": "Remove all compute nodes from a warehouse and put the warehouse into a ‘Suspended’ state if current warehouse is not suspended."
											},
											"response": [
												{
													"name": "Successful",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/warehouses/{{name}}:suspend?ifExists=false",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"warehouses",
																"{{name}}:suspend"
															],
															"query": [
																{
																	"key": "ifExists",
																	"value": "false"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"status\": \"<string>\"\n}"
												},
												{
													"name": "Bad Request. The request payload is invalid or malformed. This happens if the application didn't send the correct request payload. The response body may include the error code and message indicating the actual cause. The application must reconstruct the r",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/warehouses/{{name}}:suspend?ifExists=false",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"warehouses",
																"{{name}}:suspend"
															],
															"query": [
																{
																	"key": "ifExists",
																	"value": "false"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"error_code\": \"<string>\",\n  \"request_id\": \"<string>\"\n}"
												},
												{
													"name": "Unauthorized. The request is not authorized. This happens if the attached access token is invalid or missing. The response body may include the error code and message indicating the actual cause, e.g., expired, invalid token. The application must obtain a",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/warehouses/{{name}}:suspend?ifExists=false",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"warehouses",
																"{{name}}:suspend"
															],
															"query": [
																{
																	"key": "ifExists",
																	"value": "false"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"error_code\": \"<string>\",\n  \"request_id\": \"<string>\"\n}"
												},
												{
													"name": "Forbidden. The request is forbidden. This can also happen if the request is made even if the API is not enabled.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/warehouses/{{name}}:suspend?ifExists=false",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"warehouses",
																"{{name}}:suspend"
															],
															"query": [
																{
																	"key": "ifExists",
																	"value": "false"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"error_code\": \"<string>\",\n  \"request_id\": \"<string>\"\n}"
												},
												{
													"name": "Not Found. The request endpoint is not valid. This happens if the API endpoint does not exist, or if the API is not enabled.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/warehouses/{{name}}:suspend?ifExists=false",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"warehouses",
																"{{name}}:suspend"
															],
															"query": [
																{
																	"key": "ifExists",
																	"value": "false"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"error_code\": \"<string>\",\n  \"request_id\": \"<string>\"\n}"
												},
												{
													"name": "Method Not Allowed. The request method doesn't match the supported API. This happens, for example, if the application calls the API with GET method but the endpoint accepts only POST.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/warehouses/{{name}}:suspend?ifExists=false",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"warehouses",
																"{{name}}:suspend"
															],
															"query": [
																{
																	"key": "ifExists",
																	"value": "false"
																}
															]
														}
													},
													"status": "Method Not Allowed",
													"code": 405,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"error_code\": \"<string>\",\n  \"request_id\": \"<string>\"\n}"
												},
												{
													"name": "Conflict. The requested operation could not be performed due to a conflicting state that could not be resolved. This usually happens when a CREATE request was performed when there is a pre-existing resource with the same name, and also without one of the ",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/warehouses/{{name}}:suspend?ifExists=false",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"warehouses",
																"{{name}}:suspend"
															],
															"query": [
																{
																	"key": "ifExists",
																	"value": "false"
																}
															]
														}
													},
													"status": "Conflict",
													"code": 409,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"error_code\": \"<string>\",\n  \"request_id\": \"<string>\"\n}"
												},
												{
													"name": "Gone. This error is primarily intended to assist the task of web maintenance by notifying the recipient that the resource is intentionally unavailable.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/warehouses/{{name}}:suspend?ifExists=false",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"warehouses",
																"{{name}}:suspend"
															],
															"query": [
																{
																	"key": "ifExists",
																	"value": "false"
																}
															]
														}
													},
													"status": "Gone",
													"code": 410,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"error_code\": \"<string>\",\n  \"request_id\": \"<string>\"\n}"
												},
												{
													"name": "Limit Exceeded. The number of requests hit the rate limit. The application must slow down the frequency of hitting the API endpoints.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/warehouses/{{name}}:suspend?ifExists=false",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"warehouses",
																"{{name}}:suspend"
															],
															"query": [
																{
																	"key": "ifExists",
																	"value": "false"
																}
															]
														}
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"error_code\": \"<string>\",\n  \"request_id\": \"<string>\"\n}"
												},
												{
													"name": "Internal Server Error. The server hit an unrecoverable system error. The response body may include the error code and message for further guidance. The application owner may need to reach out the customer support.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/warehouses/{{name}}:suspend?ifExists=false",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"warehouses",
																"{{name}}:suspend"
															],
															"query": [
																{
																	"key": "ifExists",
																	"value": "false"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"error_code\": \"<string>\",\n  \"request_id\": \"<string>\"\n}"
												},
												{
													"name": "Service Unavailable. The request was not processed due to server side timeouts. The application may retry with backoff. The jittered backoff is recommended.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/warehouses/{{name}}:suspend?ifExists=false",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"warehouses",
																"{{name}}:suspend"
															],
															"query": [
																{
																	"key": "ifExists",
																	"value": "false"
																}
															]
														}
													},
													"status": "Service Unavailable",
													"code": 503,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"error_code\": \"<string>\",\n  \"request_id\": \"<string>\"\n}"
												},
												{
													"name": "Gateway Timeout. The request was not processed due to server side timeouts. The application may retry with backoff. The jittered backoff is recommended.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/warehouses/{{name}}:suspend?ifExists=false",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"warehouses",
																"{{name}}:suspend"
															],
															"query": [
																{
																	"key": "ifExists",
																	"value": "false"
																}
															]
														}
													},
													"status": "Gateway Timeout",
													"code": 504,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"error_code\": \"<string>\",\n  \"request_id\": \"<string>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "{name}:rename",
									"item": [
										{
											"name": "update and rename warehouse",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"p\",\n  \"warehouse_type\": \"<string>\",\n  \"warehouse_size\": \"<string>\",\n  \"wait_for_completion\": \"false\",\n  \"max_cluster_count\": \"<integer>\",\n  \"min_cluster_count\": \"<integer>\",\n  \"scaling_policy\": \"<string>\",\n  \"auto_suspend\": \"<integer>\",\n  \"auto_resume\": \"true\",\n  \"initially_suspended\": \"true\",\n  \"resource_monitor\": \"CWEM\",\n  \"comment\": \"<string>\",\n  \"enable_query_acceleration\": \"false\",\n  \"query_acceleration_max_scale_factor\": \"<integer>\",\n  \"max_concurrency_level\": \"<integer>\",\n  \"statement_queued_timeout_in_seconds\": \"<integer>\",\n  \"statement_timeout_in_seconds\": \"<integer>\",\n  \"tags\": {\n    \"deserunt0f\": \"<string>\"\n  },\n  \"type\": \"<string>\",\n  \"size\": \"<string>\",\n  \"state\": \"<string>\",\n  \"started_clusters\": \"<integer>\",\n  \"running\": \"<integer>\",\n  \"queued\": \"<integer>\",\n  \"is_default\": \"<boolean>\",\n  \"is_current\": \"<boolean>\",\n  \"available\": \"<string>\",\n  \"provisioning\": \"<string>\",\n  \"quiescing\": \"<string>\",\n  \"other\": \"<string>\",\n  \"created_on\": \"<dateTime>\",\n  \"resumed_on\": \"<dateTime>\",\n  \"updated_on\": \"<dateTime>\",\n  \"owner\": \"<string>\",\n  \"budget\": \"<string>\",\n  \"kind\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/warehouses/{{name}}:rename?ifExists=false",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"warehouses",
														"{{name}}:rename"
													],
													"query": [
														{
															"key": "ifExists",
															"value": "false"
														}
													]
												},
												"description": "Specifies a new identifier for the warehouse; must be unique for current account."
											},
											"response": [
												{
													"name": "Successful",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"p\",\n  \"warehouse_type\": \"<string>\",\n  \"warehouse_size\": \"<string>\",\n  \"wait_for_completion\": \"false\",\n  \"max_cluster_count\": \"<integer>\",\n  \"min_cluster_count\": \"<integer>\",\n  \"scaling_policy\": \"<string>\",\n  \"auto_suspend\": \"<integer>\",\n  \"auto_resume\": \"true\",\n  \"initially_suspended\": \"true\",\n  \"resource_monitor\": \"CWEM\",\n  \"comment\": \"<string>\",\n  \"enable_query_acceleration\": \"false\",\n  \"query_acceleration_max_scale_factor\": \"<integer>\",\n  \"max_concurrency_level\": \"<integer>\",\n  \"statement_queued_timeout_in_seconds\": \"<integer>\",\n  \"statement_timeout_in_seconds\": \"<integer>\",\n  \"tags\": {\n    \"deserunt0f\": \"<string>\"\n  },\n  \"type\": \"<string>\",\n  \"size\": \"<string>\",\n  \"state\": \"<string>\",\n  \"started_clusters\": \"<integer>\",\n  \"running\": \"<integer>\",\n  \"queued\": \"<integer>\",\n  \"is_default\": \"<boolean>\",\n  \"is_current\": \"<boolean>\",\n  \"available\": \"<string>\",\n  \"provisioning\": \"<string>\",\n  \"quiescing\": \"<string>\",\n  \"other\": \"<string>\",\n  \"created_on\": \"<dateTime>\",\n  \"resumed_on\": \"<dateTime>\",\n  \"updated_on\": \"<dateTime>\",\n  \"owner\": \"<string>\",\n  \"budget\": \"<string>\",\n  \"kind\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/warehouses/{{name}}:rename?ifExists=false",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"warehouses",
																"{{name}}:rename"
															],
															"query": [
																{
																	"key": "ifExists",
																	"value": "false"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"status\": \"<string>\"\n}"
												},
												{
													"name": "Bad Request. The request payload is invalid or malformed. This happens if the application didn't send the correct request payload. The response body may include the error code and message indicating the actual cause. The application must reconstruct the r",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"p\",\n  \"warehouse_type\": \"<string>\",\n  \"warehouse_size\": \"<string>\",\n  \"wait_for_completion\": \"false\",\n  \"max_cluster_count\": \"<integer>\",\n  \"min_cluster_count\": \"<integer>\",\n  \"scaling_policy\": \"<string>\",\n  \"auto_suspend\": \"<integer>\",\n  \"auto_resume\": \"true\",\n  \"initially_suspended\": \"true\",\n  \"resource_monitor\": \"CWEM\",\n  \"comment\": \"<string>\",\n  \"enable_query_acceleration\": \"false\",\n  \"query_acceleration_max_scale_factor\": \"<integer>\",\n  \"max_concurrency_level\": \"<integer>\",\n  \"statement_queued_timeout_in_seconds\": \"<integer>\",\n  \"statement_timeout_in_seconds\": \"<integer>\",\n  \"tags\": {\n    \"deserunt0f\": \"<string>\"\n  },\n  \"type\": \"<string>\",\n  \"size\": \"<string>\",\n  \"state\": \"<string>\",\n  \"started_clusters\": \"<integer>\",\n  \"running\": \"<integer>\",\n  \"queued\": \"<integer>\",\n  \"is_default\": \"<boolean>\",\n  \"is_current\": \"<boolean>\",\n  \"available\": \"<string>\",\n  \"provisioning\": \"<string>\",\n  \"quiescing\": \"<string>\",\n  \"other\": \"<string>\",\n  \"created_on\": \"<dateTime>\",\n  \"resumed_on\": \"<dateTime>\",\n  \"updated_on\": \"<dateTime>\",\n  \"owner\": \"<string>\",\n  \"budget\": \"<string>\",\n  \"kind\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/warehouses/{{name}}:rename?ifExists=false",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"warehouses",
																"{{name}}:rename"
															],
															"query": [
																{
																	"key": "ifExists",
																	"value": "false"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"error_code\": \"<string>\",\n  \"request_id\": \"<string>\"\n}"
												},
												{
													"name": "Unauthorized. The request is not authorized. This happens if the attached access token is invalid or missing. The response body may include the error code and message indicating the actual cause, e.g., expired, invalid token. The application must obtain a",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"p\",\n  \"warehouse_type\": \"<string>\",\n  \"warehouse_size\": \"<string>\",\n  \"wait_for_completion\": \"false\",\n  \"max_cluster_count\": \"<integer>\",\n  \"min_cluster_count\": \"<integer>\",\n  \"scaling_policy\": \"<string>\",\n  \"auto_suspend\": \"<integer>\",\n  \"auto_resume\": \"true\",\n  \"initially_suspended\": \"true\",\n  \"resource_monitor\": \"CWEM\",\n  \"comment\": \"<string>\",\n  \"enable_query_acceleration\": \"false\",\n  \"query_acceleration_max_scale_factor\": \"<integer>\",\n  \"max_concurrency_level\": \"<integer>\",\n  \"statement_queued_timeout_in_seconds\": \"<integer>\",\n  \"statement_timeout_in_seconds\": \"<integer>\",\n  \"tags\": {\n    \"deserunt0f\": \"<string>\"\n  },\n  \"type\": \"<string>\",\n  \"size\": \"<string>\",\n  \"state\": \"<string>\",\n  \"started_clusters\": \"<integer>\",\n  \"running\": \"<integer>\",\n  \"queued\": \"<integer>\",\n  \"is_default\": \"<boolean>\",\n  \"is_current\": \"<boolean>\",\n  \"available\": \"<string>\",\n  \"provisioning\": \"<string>\",\n  \"quiescing\": \"<string>\",\n  \"other\": \"<string>\",\n  \"created_on\": \"<dateTime>\",\n  \"resumed_on\": \"<dateTime>\",\n  \"updated_on\": \"<dateTime>\",\n  \"owner\": \"<string>\",\n  \"budget\": \"<string>\",\n  \"kind\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/warehouses/{{name}}:rename?ifExists=false",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"warehouses",
																"{{name}}:rename"
															],
															"query": [
																{
																	"key": "ifExists",
																	"value": "false"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"error_code\": \"<string>\",\n  \"request_id\": \"<string>\"\n}"
												},
												{
													"name": "Forbidden. The request is forbidden. This can also happen if the request is made even if the API is not enabled.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"p\",\n  \"warehouse_type\": \"<string>\",\n  \"warehouse_size\": \"<string>\",\n  \"wait_for_completion\": \"false\",\n  \"max_cluster_count\": \"<integer>\",\n  \"min_cluster_count\": \"<integer>\",\n  \"scaling_policy\": \"<string>\",\n  \"auto_suspend\": \"<integer>\",\n  \"auto_resume\": \"true\",\n  \"initially_suspended\": \"true\",\n  \"resource_monitor\": \"CWEM\",\n  \"comment\": \"<string>\",\n  \"enable_query_acceleration\": \"false\",\n  \"query_acceleration_max_scale_factor\": \"<integer>\",\n  \"max_concurrency_level\": \"<integer>\",\n  \"statement_queued_timeout_in_seconds\": \"<integer>\",\n  \"statement_timeout_in_seconds\": \"<integer>\",\n  \"tags\": {\n    \"deserunt0f\": \"<string>\"\n  },\n  \"type\": \"<string>\",\n  \"size\": \"<string>\",\n  \"state\": \"<string>\",\n  \"started_clusters\": \"<integer>\",\n  \"running\": \"<integer>\",\n  \"queued\": \"<integer>\",\n  \"is_default\": \"<boolean>\",\n  \"is_current\": \"<boolean>\",\n  \"available\": \"<string>\",\n  \"provisioning\": \"<string>\",\n  \"quiescing\": \"<string>\",\n  \"other\": \"<string>\",\n  \"created_on\": \"<dateTime>\",\n  \"resumed_on\": \"<dateTime>\",\n  \"updated_on\": \"<dateTime>\",\n  \"owner\": \"<string>\",\n  \"budget\": \"<string>\",\n  \"kind\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/warehouses/{{name}}:rename?ifExists=false",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"warehouses",
																"{{name}}:rename"
															],
															"query": [
																{
																	"key": "ifExists",
																	"value": "false"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"error_code\": \"<string>\",\n  \"request_id\": \"<string>\"\n}"
												},
												{
													"name": "Not Found. The request endpoint is not valid. This happens if the API endpoint does not exist, or if the API is not enabled.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"p\",\n  \"warehouse_type\": \"<string>\",\n  \"warehouse_size\": \"<string>\",\n  \"wait_for_completion\": \"false\",\n  \"max_cluster_count\": \"<integer>\",\n  \"min_cluster_count\": \"<integer>\",\n  \"scaling_policy\": \"<string>\",\n  \"auto_suspend\": \"<integer>\",\n  \"auto_resume\": \"true\",\n  \"initially_suspended\": \"true\",\n  \"resource_monitor\": \"CWEM\",\n  \"comment\": \"<string>\",\n  \"enable_query_acceleration\": \"false\",\n  \"query_acceleration_max_scale_factor\": \"<integer>\",\n  \"max_concurrency_level\": \"<integer>\",\n  \"statement_queued_timeout_in_seconds\": \"<integer>\",\n  \"statement_timeout_in_seconds\": \"<integer>\",\n  \"tags\": {\n    \"deserunt0f\": \"<string>\"\n  },\n  \"type\": \"<string>\",\n  \"size\": \"<string>\",\n  \"state\": \"<string>\",\n  \"started_clusters\": \"<integer>\",\n  \"running\": \"<integer>\",\n  \"queued\": \"<integer>\",\n  \"is_default\": \"<boolean>\",\n  \"is_current\": \"<boolean>\",\n  \"available\": \"<string>\",\n  \"provisioning\": \"<string>\",\n  \"quiescing\": \"<string>\",\n  \"other\": \"<string>\",\n  \"created_on\": \"<dateTime>\",\n  \"resumed_on\": \"<dateTime>\",\n  \"updated_on\": \"<dateTime>\",\n  \"owner\": \"<string>\",\n  \"budget\": \"<string>\",\n  \"kind\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/warehouses/{{name}}:rename?ifExists=false",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"warehouses",
																"{{name}}:rename"
															],
															"query": [
																{
																	"key": "ifExists",
																	"value": "false"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"error_code\": \"<string>\",\n  \"request_id\": \"<string>\"\n}"
												},
												{
													"name": "Method Not Allowed. The request method doesn't match the supported API. This happens, for example, if the application calls the API with GET method but the endpoint accepts only POST.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"p\",\n  \"warehouse_type\": \"<string>\",\n  \"warehouse_size\": \"<string>\",\n  \"wait_for_completion\": \"false\",\n  \"max_cluster_count\": \"<integer>\",\n  \"min_cluster_count\": \"<integer>\",\n  \"scaling_policy\": \"<string>\",\n  \"auto_suspend\": \"<integer>\",\n  \"auto_resume\": \"true\",\n  \"initially_suspended\": \"true\",\n  \"resource_monitor\": \"CWEM\",\n  \"comment\": \"<string>\",\n  \"enable_query_acceleration\": \"false\",\n  \"query_acceleration_max_scale_factor\": \"<integer>\",\n  \"max_concurrency_level\": \"<integer>\",\n  \"statement_queued_timeout_in_seconds\": \"<integer>\",\n  \"statement_timeout_in_seconds\": \"<integer>\",\n  \"tags\": {\n    \"deserunt0f\": \"<string>\"\n  },\n  \"type\": \"<string>\",\n  \"size\": \"<string>\",\n  \"state\": \"<string>\",\n  \"started_clusters\": \"<integer>\",\n  \"running\": \"<integer>\",\n  \"queued\": \"<integer>\",\n  \"is_default\": \"<boolean>\",\n  \"is_current\": \"<boolean>\",\n  \"available\": \"<string>\",\n  \"provisioning\": \"<string>\",\n  \"quiescing\": \"<string>\",\n  \"other\": \"<string>\",\n  \"created_on\": \"<dateTime>\",\n  \"resumed_on\": \"<dateTime>\",\n  \"updated_on\": \"<dateTime>\",\n  \"owner\": \"<string>\",\n  \"budget\": \"<string>\",\n  \"kind\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/warehouses/{{name}}:rename?ifExists=false",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"warehouses",
																"{{name}}:rename"
															],
															"query": [
																{
																	"key": "ifExists",
																	"value": "false"
																}
															]
														}
													},
													"status": "Method Not Allowed",
													"code": 405,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"error_code\": \"<string>\",\n  \"request_id\": \"<string>\"\n}"
												},
												{
													"name": "Conflict. The requested operation could not be performed due to a conflicting state that could not be resolved. This usually happens when a CREATE request was performed when there is a pre-existing resource with the same name, and also without one of the ",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"p\",\n  \"warehouse_type\": \"<string>\",\n  \"warehouse_size\": \"<string>\",\n  \"wait_for_completion\": \"false\",\n  \"max_cluster_count\": \"<integer>\",\n  \"min_cluster_count\": \"<integer>\",\n  \"scaling_policy\": \"<string>\",\n  \"auto_suspend\": \"<integer>\",\n  \"auto_resume\": \"true\",\n  \"initially_suspended\": \"true\",\n  \"resource_monitor\": \"CWEM\",\n  \"comment\": \"<string>\",\n  \"enable_query_acceleration\": \"false\",\n  \"query_acceleration_max_scale_factor\": \"<integer>\",\n  \"max_concurrency_level\": \"<integer>\",\n  \"statement_queued_timeout_in_seconds\": \"<integer>\",\n  \"statement_timeout_in_seconds\": \"<integer>\",\n  \"tags\": {\n    \"deserunt0f\": \"<string>\"\n  },\n  \"type\": \"<string>\",\n  \"size\": \"<string>\",\n  \"state\": \"<string>\",\n  \"started_clusters\": \"<integer>\",\n  \"running\": \"<integer>\",\n  \"queued\": \"<integer>\",\n  \"is_default\": \"<boolean>\",\n  \"is_current\": \"<boolean>\",\n  \"available\": \"<string>\",\n  \"provisioning\": \"<string>\",\n  \"quiescing\": \"<string>\",\n  \"other\": \"<string>\",\n  \"created_on\": \"<dateTime>\",\n  \"resumed_on\": \"<dateTime>\",\n  \"updated_on\": \"<dateTime>\",\n  \"owner\": \"<string>\",\n  \"budget\": \"<string>\",\n  \"kind\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/warehouses/{{name}}:rename?ifExists=false",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"warehouses",
																"{{name}}:rename"
															],
															"query": [
																{
																	"key": "ifExists",
																	"value": "false"
																}
															]
														}
													},
													"status": "Conflict",
													"code": 409,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"error_code\": \"<string>\",\n  \"request_id\": \"<string>\"\n}"
												},
												{
													"name": "Gone. This error is primarily intended to assist the task of web maintenance by notifying the recipient that the resource is intentionally unavailable.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"p\",\n  \"warehouse_type\": \"<string>\",\n  \"warehouse_size\": \"<string>\",\n  \"wait_for_completion\": \"false\",\n  \"max_cluster_count\": \"<integer>\",\n  \"min_cluster_count\": \"<integer>\",\n  \"scaling_policy\": \"<string>\",\n  \"auto_suspend\": \"<integer>\",\n  \"auto_resume\": \"true\",\n  \"initially_suspended\": \"true\",\n  \"resource_monitor\": \"CWEM\",\n  \"comment\": \"<string>\",\n  \"enable_query_acceleration\": \"false\",\n  \"query_acceleration_max_scale_factor\": \"<integer>\",\n  \"max_concurrency_level\": \"<integer>\",\n  \"statement_queued_timeout_in_seconds\": \"<integer>\",\n  \"statement_timeout_in_seconds\": \"<integer>\",\n  \"tags\": {\n    \"deserunt0f\": \"<string>\"\n  },\n  \"type\": \"<string>\",\n  \"size\": \"<string>\",\n  \"state\": \"<string>\",\n  \"started_clusters\": \"<integer>\",\n  \"running\": \"<integer>\",\n  \"queued\": \"<integer>\",\n  \"is_default\": \"<boolean>\",\n  \"is_current\": \"<boolean>\",\n  \"available\": \"<string>\",\n  \"provisioning\": \"<string>\",\n  \"quiescing\": \"<string>\",\n  \"other\": \"<string>\",\n  \"created_on\": \"<dateTime>\",\n  \"resumed_on\": \"<dateTime>\",\n  \"updated_on\": \"<dateTime>\",\n  \"owner\": \"<string>\",\n  \"budget\": \"<string>\",\n  \"kind\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/warehouses/{{name}}:rename?ifExists=false",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"warehouses",
																"{{name}}:rename"
															],
															"query": [
																{
																	"key": "ifExists",
																	"value": "false"
																}
															]
														}
													},
													"status": "Gone",
													"code": 410,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"error_code\": \"<string>\",\n  \"request_id\": \"<string>\"\n}"
												},
												{
													"name": "Limit Exceeded. The number of requests hit the rate limit. The application must slow down the frequency of hitting the API endpoints.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"p\",\n  \"warehouse_type\": \"<string>\",\n  \"warehouse_size\": \"<string>\",\n  \"wait_for_completion\": \"false\",\n  \"max_cluster_count\": \"<integer>\",\n  \"min_cluster_count\": \"<integer>\",\n  \"scaling_policy\": \"<string>\",\n  \"auto_suspend\": \"<integer>\",\n  \"auto_resume\": \"true\",\n  \"initially_suspended\": \"true\",\n  \"resource_monitor\": \"CWEM\",\n  \"comment\": \"<string>\",\n  \"enable_query_acceleration\": \"false\",\n  \"query_acceleration_max_scale_factor\": \"<integer>\",\n  \"max_concurrency_level\": \"<integer>\",\n  \"statement_queued_timeout_in_seconds\": \"<integer>\",\n  \"statement_timeout_in_seconds\": \"<integer>\",\n  \"tags\": {\n    \"deserunt0f\": \"<string>\"\n  },\n  \"type\": \"<string>\",\n  \"size\": \"<string>\",\n  \"state\": \"<string>\",\n  \"started_clusters\": \"<integer>\",\n  \"running\": \"<integer>\",\n  \"queued\": \"<integer>\",\n  \"is_default\": \"<boolean>\",\n  \"is_current\": \"<boolean>\",\n  \"available\": \"<string>\",\n  \"provisioning\": \"<string>\",\n  \"quiescing\": \"<string>\",\n  \"other\": \"<string>\",\n  \"created_on\": \"<dateTime>\",\n  \"resumed_on\": \"<dateTime>\",\n  \"updated_on\": \"<dateTime>\",\n  \"owner\": \"<string>\",\n  \"budget\": \"<string>\",\n  \"kind\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/warehouses/{{name}}:rename?ifExists=false",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"warehouses",
																"{{name}}:rename"
															],
															"query": [
																{
																	"key": "ifExists",
																	"value": "false"
																}
															]
														}
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"error_code\": \"<string>\",\n  \"request_id\": \"<string>\"\n}"
												},
												{
													"name": "Internal Server Error. The server hit an unrecoverable system error. The response body may include the error code and message for further guidance. The application owner may need to reach out the customer support.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"p\",\n  \"warehouse_type\": \"<string>\",\n  \"warehouse_size\": \"<string>\",\n  \"wait_for_completion\": \"false\",\n  \"max_cluster_count\": \"<integer>\",\n  \"min_cluster_count\": \"<integer>\",\n  \"scaling_policy\": \"<string>\",\n  \"auto_suspend\": \"<integer>\",\n  \"auto_resume\": \"true\",\n  \"initially_suspended\": \"true\",\n  \"resource_monitor\": \"CWEM\",\n  \"comment\": \"<string>\",\n  \"enable_query_acceleration\": \"false\",\n  \"query_acceleration_max_scale_factor\": \"<integer>\",\n  \"max_concurrency_level\": \"<integer>\",\n  \"statement_queued_timeout_in_seconds\": \"<integer>\",\n  \"statement_timeout_in_seconds\": \"<integer>\",\n  \"tags\": {\n    \"deserunt0f\": \"<string>\"\n  },\n  \"type\": \"<string>\",\n  \"size\": \"<string>\",\n  \"state\": \"<string>\",\n  \"started_clusters\": \"<integer>\",\n  \"running\": \"<integer>\",\n  \"queued\": \"<integer>\",\n  \"is_default\": \"<boolean>\",\n  \"is_current\": \"<boolean>\",\n  \"available\": \"<string>\",\n  \"provisioning\": \"<string>\",\n  \"quiescing\": \"<string>\",\n  \"other\": \"<string>\",\n  \"created_on\": \"<dateTime>\",\n  \"resumed_on\": \"<dateTime>\",\n  \"updated_on\": \"<dateTime>\",\n  \"owner\": \"<string>\",\n  \"budget\": \"<string>\",\n  \"kind\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/warehouses/{{name}}:rename?ifExists=false",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"warehouses",
																"{{name}}:rename"
															],
															"query": [
																{
																	"key": "ifExists",
																	"value": "false"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"error_code\": \"<string>\",\n  \"request_id\": \"<string>\"\n}"
												},
												{
													"name": "Service Unavailable. The request was not processed due to server side timeouts. The application may retry with backoff. The jittered backoff is recommended.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"p\",\n  \"warehouse_type\": \"<string>\",\n  \"warehouse_size\": \"<string>\",\n  \"wait_for_completion\": \"false\",\n  \"max_cluster_count\": \"<integer>\",\n  \"min_cluster_count\": \"<integer>\",\n  \"scaling_policy\": \"<string>\",\n  \"auto_suspend\": \"<integer>\",\n  \"auto_resume\": \"true\",\n  \"initially_suspended\": \"true\",\n  \"resource_monitor\": \"CWEM\",\n  \"comment\": \"<string>\",\n  \"enable_query_acceleration\": \"false\",\n  \"query_acceleration_max_scale_factor\": \"<integer>\",\n  \"max_concurrency_level\": \"<integer>\",\n  \"statement_queued_timeout_in_seconds\": \"<integer>\",\n  \"statement_timeout_in_seconds\": \"<integer>\",\n  \"tags\": {\n    \"deserunt0f\": \"<string>\"\n  },\n  \"type\": \"<string>\",\n  \"size\": \"<string>\",\n  \"state\": \"<string>\",\n  \"started_clusters\": \"<integer>\",\n  \"running\": \"<integer>\",\n  \"queued\": \"<integer>\",\n  \"is_default\": \"<boolean>\",\n  \"is_current\": \"<boolean>\",\n  \"available\": \"<string>\",\n  \"provisioning\": \"<string>\",\n  \"quiescing\": \"<string>\",\n  \"other\": \"<string>\",\n  \"created_on\": \"<dateTime>\",\n  \"resumed_on\": \"<dateTime>\",\n  \"updated_on\": \"<dateTime>\",\n  \"owner\": \"<string>\",\n  \"budget\": \"<string>\",\n  \"kind\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/warehouses/{{name}}:rename?ifExists=false",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"warehouses",
																"{{name}}:rename"
															],
															"query": [
																{
																	"key": "ifExists",
																	"value": "false"
																}
															]
														}
													},
													"status": "Service Unavailable",
													"code": 503,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"error_code\": \"<string>\",\n  \"request_id\": \"<string>\"\n}"
												},
												{
													"name": "Gateway Timeout. The request was not processed due to server side timeouts. The application may retry with backoff. The jittered backoff is recommended.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"p\",\n  \"warehouse_type\": \"<string>\",\n  \"warehouse_size\": \"<string>\",\n  \"wait_for_completion\": \"false\",\n  \"max_cluster_count\": \"<integer>\",\n  \"min_cluster_count\": \"<integer>\",\n  \"scaling_policy\": \"<string>\",\n  \"auto_suspend\": \"<integer>\",\n  \"auto_resume\": \"true\",\n  \"initially_suspended\": \"true\",\n  \"resource_monitor\": \"CWEM\",\n  \"comment\": \"<string>\",\n  \"enable_query_acceleration\": \"false\",\n  \"query_acceleration_max_scale_factor\": \"<integer>\",\n  \"max_concurrency_level\": \"<integer>\",\n  \"statement_queued_timeout_in_seconds\": \"<integer>\",\n  \"statement_timeout_in_seconds\": \"<integer>\",\n  \"tags\": {\n    \"deserunt0f\": \"<string>\"\n  },\n  \"type\": \"<string>\",\n  \"size\": \"<string>\",\n  \"state\": \"<string>\",\n  \"started_clusters\": \"<integer>\",\n  \"running\": \"<integer>\",\n  \"queued\": \"<integer>\",\n  \"is_default\": \"<boolean>\",\n  \"is_current\": \"<boolean>\",\n  \"available\": \"<string>\",\n  \"provisioning\": \"<string>\",\n  \"quiescing\": \"<string>\",\n  \"other\": \"<string>\",\n  \"created_on\": \"<dateTime>\",\n  \"resumed_on\": \"<dateTime>\",\n  \"updated_on\": \"<dateTime>\",\n  \"owner\": \"<string>\",\n  \"budget\": \"<string>\",\n  \"kind\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/warehouses/{{name}}:rename?ifExists=false",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"warehouses",
																"{{name}}:rename"
															],
															"query": [
																{
																	"key": "ifExists",
																	"value": "false"
																}
															]
														}
													},
													"status": "Gateway Timeout",
													"code": 504,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"error_code\": \"<string>\",\n  \"request_id\": \"<string>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "{name}:abort",
									"item": [
										{
											"name": "abort all queries",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/warehouses/{{name}}:abort?ifExists=false",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"warehouses",
														"{{name}}:abort"
													],
													"query": [
														{
															"key": "ifExists",
															"value": "false"
														}
													]
												},
												"description": "Aborts all the queries currently running or queued on the warehouse."
											},
											"response": [
												{
													"name": "Successful",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/warehouses/{{name}}:abort?ifExists=false",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"warehouses",
																"{{name}}:abort"
															],
															"query": [
																{
																	"key": "ifExists",
																	"value": "false"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"status\": \"<string>\"\n}"
												},
												{
													"name": "Bad Request. The request payload is invalid or malformed. This happens if the application didn't send the correct request payload. The response body may include the error code and message indicating the actual cause. The application must reconstruct the r",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/warehouses/{{name}}:abort?ifExists=false",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"warehouses",
																"{{name}}:abort"
															],
															"query": [
																{
																	"key": "ifExists",
																	"value": "false"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"error_code\": \"<string>\",\n  \"request_id\": \"<string>\"\n}"
												},
												{
													"name": "Unauthorized. The request is not authorized. This happens if the attached access token is invalid or missing. The response body may include the error code and message indicating the actual cause, e.g., expired, invalid token. The application must obtain a",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/warehouses/{{name}}:abort?ifExists=false",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"warehouses",
																"{{name}}:abort"
															],
															"query": [
																{
																	"key": "ifExists",
																	"value": "false"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"error_code\": \"<string>\",\n  \"request_id\": \"<string>\"\n}"
												},
												{
													"name": "Forbidden. The request is forbidden. This can also happen if the request is made even if the API is not enabled.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/warehouses/{{name}}:abort?ifExists=false",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"warehouses",
																"{{name}}:abort"
															],
															"query": [
																{
																	"key": "ifExists",
																	"value": "false"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"error_code\": \"<string>\",\n  \"request_id\": \"<string>\"\n}"
												},
												{
													"name": "Not Found. The request endpoint is not valid. This happens if the API endpoint does not exist, or if the API is not enabled.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/warehouses/{{name}}:abort?ifExists=false",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"warehouses",
																"{{name}}:abort"
															],
															"query": [
																{
																	"key": "ifExists",
																	"value": "false"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"error_code\": \"<string>\",\n  \"request_id\": \"<string>\"\n}"
												},
												{
													"name": "Method Not Allowed. The request method doesn't match the supported API. This happens, for example, if the application calls the API with GET method but the endpoint accepts only POST.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/warehouses/{{name}}:abort?ifExists=false",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"warehouses",
																"{{name}}:abort"
															],
															"query": [
																{
																	"key": "ifExists",
																	"value": "false"
																}
															]
														}
													},
													"status": "Method Not Allowed",
													"code": 405,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"error_code\": \"<string>\",\n  \"request_id\": \"<string>\"\n}"
												},
												{
													"name": "Conflict. The requested operation could not be performed due to a conflicting state that could not be resolved. This usually happens when a CREATE request was performed when there is a pre-existing resource with the same name, and also without one of the ",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/warehouses/{{name}}:abort?ifExists=false",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"warehouses",
																"{{name}}:abort"
															],
															"query": [
																{
																	"key": "ifExists",
																	"value": "false"
																}
															]
														}
													},
													"status": "Conflict",
													"code": 409,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"error_code\": \"<string>\",\n  \"request_id\": \"<string>\"\n}"
												},
												{
													"name": "Gone. This error is primarily intended to assist the task of web maintenance by notifying the recipient that the resource is intentionally unavailable.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/warehouses/{{name}}:abort?ifExists=false",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"warehouses",
																"{{name}}:abort"
															],
															"query": [
																{
																	"key": "ifExists",
																	"value": "false"
																}
															]
														}
													},
													"status": "Gone",
													"code": 410,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"error_code\": \"<string>\",\n  \"request_id\": \"<string>\"\n}"
												},
												{
													"name": "Limit Exceeded. The number of requests hit the rate limit. The application must slow down the frequency of hitting the API endpoints.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/warehouses/{{name}}:abort?ifExists=false",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"warehouses",
																"{{name}}:abort"
															],
															"query": [
																{
																	"key": "ifExists",
																	"value": "false"
																}
															]
														}
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"error_code\": \"<string>\",\n  \"request_id\": \"<string>\"\n}"
												},
												{
													"name": "Internal Server Error. The server hit an unrecoverable system error. The response body may include the error code and message for further guidance. The application owner may need to reach out the customer support.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/warehouses/{{name}}:abort?ifExists=false",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"warehouses",
																"{{name}}:abort"
															],
															"query": [
																{
																	"key": "ifExists",
																	"value": "false"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"error_code\": \"<string>\",\n  \"request_id\": \"<string>\"\n}"
												},
												{
													"name": "Service Unavailable. The request was not processed due to server side timeouts. The application may retry with backoff. The jittered backoff is recommended.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/warehouses/{{name}}:abort?ifExists=false",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"warehouses",
																"{{name}}:abort"
															],
															"query": [
																{
																	"key": "ifExists",
																	"value": "false"
																}
															]
														}
													},
													"status": "Service Unavailable",
													"code": 503,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"error_code\": \"<string>\",\n  \"request_id\": \"<string>\"\n}"
												},
												{
													"name": "Gateway Timeout. The request was not processed due to server side timeouts. The application may retry with backoff. The jittered backoff is recommended.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/warehouses/{{name}}:abort?ifExists=false",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"warehouses",
																"{{name}}:abort"
															],
															"query": [
																{
																	"key": "ifExists",
																	"value": "false"
																}
															]
														}
													},
													"status": "Gateway Timeout",
													"code": 504,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"error_code\": \"<string>\",\n  \"request_id\": \"<string>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "{name}:use",
									"item": [
										{
											"name": "use current warehouse for session",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/warehouses/{{name}}:use",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"warehouses",
														"{{name}}:use"
													]
												},
												"description": "Specifies the active/current warehouse for the session."
											},
											"response": [
												{
													"name": "Successful",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/warehouses/{{name}}:use",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"warehouses",
																"{{name}}:use"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"status\": \"<string>\"\n}"
												},
												{
													"name": "Bad Request. The request payload is invalid or malformed. This happens if the application didn't send the correct request payload. The response body may include the error code and message indicating the actual cause. The application must reconstruct the r",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/warehouses/{{name}}:use",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"warehouses",
																"{{name}}:use"
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"error_code\": \"<string>\",\n  \"request_id\": \"<string>\"\n}"
												},
												{
													"name": "Unauthorized. The request is not authorized. This happens if the attached access token is invalid or missing. The response body may include the error code and message indicating the actual cause, e.g., expired, invalid token. The application must obtain a",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/warehouses/{{name}}:use",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"warehouses",
																"{{name}}:use"
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"error_code\": \"<string>\",\n  \"request_id\": \"<string>\"\n}"
												},
												{
													"name": "Forbidden. The request is forbidden. This can also happen if the request is made even if the API is not enabled.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/warehouses/{{name}}:use",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"warehouses",
																"{{name}}:use"
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"error_code\": \"<string>\",\n  \"request_id\": \"<string>\"\n}"
												},
												{
													"name": "Not Found. The request endpoint is not valid. This happens if the API endpoint does not exist, or if the API is not enabled.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/warehouses/{{name}}:use",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"warehouses",
																"{{name}}:use"
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"error_code\": \"<string>\",\n  \"request_id\": \"<string>\"\n}"
												},
												{
													"name": "Method Not Allowed. The request method doesn't match the supported API. This happens, for example, if the application calls the API with GET method but the endpoint accepts only POST.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/warehouses/{{name}}:use",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"warehouses",
																"{{name}}:use"
															]
														}
													},
													"status": "Method Not Allowed",
													"code": 405,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"error_code\": \"<string>\",\n  \"request_id\": \"<string>\"\n}"
												},
												{
													"name": "Conflict. The requested operation could not be performed due to a conflicting state that could not be resolved. This usually happens when a CREATE request was performed when there is a pre-existing resource with the same name, and also without one of the ",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/warehouses/{{name}}:use",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"warehouses",
																"{{name}}:use"
															]
														}
													},
													"status": "Conflict",
													"code": 409,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"error_code\": \"<string>\",\n  \"request_id\": \"<string>\"\n}"
												},
												{
													"name": "Gone. This error is primarily intended to assist the task of web maintenance by notifying the recipient that the resource is intentionally unavailable.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/warehouses/{{name}}:use",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"warehouses",
																"{{name}}:use"
															]
														}
													},
													"status": "Gone",
													"code": 410,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"error_code\": \"<string>\",\n  \"request_id\": \"<string>\"\n}"
												},
												{
													"name": "Limit Exceeded. The number of requests hit the rate limit. The application must slow down the frequency of hitting the API endpoints.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/warehouses/{{name}}:use",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"warehouses",
																"{{name}}:use"
															]
														}
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"error_code\": \"<string>\",\n  \"request_id\": \"<string>\"\n}"
												},
												{
													"name": "Internal Server Error. The server hit an unrecoverable system error. The response body may include the error code and message for further guidance. The application owner may need to reach out the customer support.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/warehouses/{{name}}:use",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"warehouses",
																"{{name}}:use"
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"error_code\": \"<string>\",\n  \"request_id\": \"<string>\"\n}"
												},
												{
													"name": "Service Unavailable. The request was not processed due to server side timeouts. The application may retry with backoff. The jittered backoff is recommended.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/warehouses/{{name}}:use",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"warehouses",
																"{{name}}:use"
															]
														}
													},
													"status": "Service Unavailable",
													"code": 503,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"error_code\": \"<string>\",\n  \"request_id\": \"<string>\"\n}"
												},
												{
													"name": "Gateway Timeout. The request was not processed due to server side timeouts. The application may retry with backoff. The jittered backoff is recommended.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/warehouses/{{name}}:use",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"warehouses",
																"{{name}}:use"
															]
														}
													},
													"status": "Gateway Timeout",
													"code": 504,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"error_code\": \"<string>\",\n  \"request_id\": \"<string>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "Create or replace warehouse",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"myWarehouse\",\n  \"warehouse_size\": \"SMALL\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/warehouses?createMode=errorIfExists",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"warehouses"
											],
											"query": [
												{
													"key": "createMode",
													"value": "errorIfExists"
												}
											]
										},
										"description": "Create a virtual warehouse. Equivalent to CREATE WAREHOUSE in SQL."
									},
									"response": [
										{
											"name": "Successful",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"p\",\n  \"warehouse_type\": \"<string>\",\n  \"warehouse_size\": \"<string>\",\n  \"wait_for_completion\": \"false\",\n  \"max_cluster_count\": \"<integer>\",\n  \"min_cluster_count\": \"<integer>\",\n  \"scaling_policy\": \"<string>\",\n  \"auto_suspend\": \"<integer>\",\n  \"auto_resume\": \"true\",\n  \"initially_suspended\": \"true\",\n  \"resource_monitor\": \"CWEM\",\n  \"comment\": \"<string>\",\n  \"enable_query_acceleration\": \"false\",\n  \"query_acceleration_max_scale_factor\": \"<integer>\",\n  \"max_concurrency_level\": \"<integer>\",\n  \"statement_queued_timeout_in_seconds\": \"<integer>\",\n  \"statement_timeout_in_seconds\": \"<integer>\",\n  \"tags\": {\n    \"deserunt0f\": \"<string>\"\n  },\n  \"type\": \"<string>\",\n  \"size\": \"<string>\",\n  \"state\": \"<string>\",\n  \"started_clusters\": \"<integer>\",\n  \"running\": \"<integer>\",\n  \"queued\": \"<integer>\",\n  \"is_default\": \"<boolean>\",\n  \"is_current\": \"<boolean>\",\n  \"available\": \"<string>\",\n  \"provisioning\": \"<string>\",\n  \"quiescing\": \"<string>\",\n  \"other\": \"<string>\",\n  \"created_on\": \"<dateTime>\",\n  \"resumed_on\": \"<dateTime>\",\n  \"updated_on\": \"<dateTime>\",\n  \"owner\": \"<string>\",\n  \"budget\": \"<string>\",\n  \"kind\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/warehouses?createMode=errorIfExists",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"warehouses"
													],
													"query": [
														{
															"key": "createMode",
															"value": "errorIfExists"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"status\": \"<string>\"\n}"
										},
										{
											"name": "Bad Request. The request payload is invalid or malformed. This happens if the application didn't send the correct request payload. The response body may include the error code and message indicating the actual cause. The application must reconstruct the r",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"p\",\n  \"warehouse_type\": \"<string>\",\n  \"warehouse_size\": \"<string>\",\n  \"wait_for_completion\": \"false\",\n  \"max_cluster_count\": \"<integer>\",\n  \"min_cluster_count\": \"<integer>\",\n  \"scaling_policy\": \"<string>\",\n  \"auto_suspend\": \"<integer>\",\n  \"auto_resume\": \"true\",\n  \"initially_suspended\": \"true\",\n  \"resource_monitor\": \"CWEM\",\n  \"comment\": \"<string>\",\n  \"enable_query_acceleration\": \"false\",\n  \"query_acceleration_max_scale_factor\": \"<integer>\",\n  \"max_concurrency_level\": \"<integer>\",\n  \"statement_queued_timeout_in_seconds\": \"<integer>\",\n  \"statement_timeout_in_seconds\": \"<integer>\",\n  \"tags\": {\n    \"deserunt0f\": \"<string>\"\n  },\n  \"type\": \"<string>\",\n  \"size\": \"<string>\",\n  \"state\": \"<string>\",\n  \"started_clusters\": \"<integer>\",\n  \"running\": \"<integer>\",\n  \"queued\": \"<integer>\",\n  \"is_default\": \"<boolean>\",\n  \"is_current\": \"<boolean>\",\n  \"available\": \"<string>\",\n  \"provisioning\": \"<string>\",\n  \"quiescing\": \"<string>\",\n  \"other\": \"<string>\",\n  \"created_on\": \"<dateTime>\",\n  \"resumed_on\": \"<dateTime>\",\n  \"updated_on\": \"<dateTime>\",\n  \"owner\": \"<string>\",\n  \"budget\": \"<string>\",\n  \"kind\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/warehouses?createMode=errorIfExists",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"warehouses"
													],
													"query": [
														{
															"key": "createMode",
															"value": "errorIfExists"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\",\n  \"error_code\": \"<string>\",\n  \"request_id\": \"<string>\"\n}"
										},
										{
											"name": "Unauthorized. The request is not authorized. This happens if the attached access token is invalid or missing. The response body may include the error code and message indicating the actual cause, e.g., expired, invalid token. The application must obtain a",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"p\",\n  \"warehouse_type\": \"<string>\",\n  \"warehouse_size\": \"<string>\",\n  \"wait_for_completion\": \"false\",\n  \"max_cluster_count\": \"<integer>\",\n  \"min_cluster_count\": \"<integer>\",\n  \"scaling_policy\": \"<string>\",\n  \"auto_suspend\": \"<integer>\",\n  \"auto_resume\": \"true\",\n  \"initially_suspended\": \"true\",\n  \"resource_monitor\": \"CWEM\",\n  \"comment\": \"<string>\",\n  \"enable_query_acceleration\": \"false\",\n  \"query_acceleration_max_scale_factor\": \"<integer>\",\n  \"max_concurrency_level\": \"<integer>\",\n  \"statement_queued_timeout_in_seconds\": \"<integer>\",\n  \"statement_timeout_in_seconds\": \"<integer>\",\n  \"tags\": {\n    \"deserunt0f\": \"<string>\"\n  },\n  \"type\": \"<string>\",\n  \"size\": \"<string>\",\n  \"state\": \"<string>\",\n  \"started_clusters\": \"<integer>\",\n  \"running\": \"<integer>\",\n  \"queued\": \"<integer>\",\n  \"is_default\": \"<boolean>\",\n  \"is_current\": \"<boolean>\",\n  \"available\": \"<string>\",\n  \"provisioning\": \"<string>\",\n  \"quiescing\": \"<string>\",\n  \"other\": \"<string>\",\n  \"created_on\": \"<dateTime>\",\n  \"resumed_on\": \"<dateTime>\",\n  \"updated_on\": \"<dateTime>\",\n  \"owner\": \"<string>\",\n  \"budget\": \"<string>\",\n  \"kind\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/warehouses?createMode=errorIfExists",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"warehouses"
													],
													"query": [
														{
															"key": "createMode",
															"value": "errorIfExists"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\",\n  \"error_code\": \"<string>\",\n  \"request_id\": \"<string>\"\n}"
										},
										{
											"name": "Forbidden. The request is forbidden. This can also happen if the request is made even if the API is not enabled.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"p\",\n  \"warehouse_type\": \"<string>\",\n  \"warehouse_size\": \"<string>\",\n  \"wait_for_completion\": \"false\",\n  \"max_cluster_count\": \"<integer>\",\n  \"min_cluster_count\": \"<integer>\",\n  \"scaling_policy\": \"<string>\",\n  \"auto_suspend\": \"<integer>\",\n  \"auto_resume\": \"true\",\n  \"initially_suspended\": \"true\",\n  \"resource_monitor\": \"CWEM\",\n  \"comment\": \"<string>\",\n  \"enable_query_acceleration\": \"false\",\n  \"query_acceleration_max_scale_factor\": \"<integer>\",\n  \"max_concurrency_level\": \"<integer>\",\n  \"statement_queued_timeout_in_seconds\": \"<integer>\",\n  \"statement_timeout_in_seconds\": \"<integer>\",\n  \"tags\": {\n    \"deserunt0f\": \"<string>\"\n  },\n  \"type\": \"<string>\",\n  \"size\": \"<string>\",\n  \"state\": \"<string>\",\n  \"started_clusters\": \"<integer>\",\n  \"running\": \"<integer>\",\n  \"queued\": \"<integer>\",\n  \"is_default\": \"<boolean>\",\n  \"is_current\": \"<boolean>\",\n  \"available\": \"<string>\",\n  \"provisioning\": \"<string>\",\n  \"quiescing\": \"<string>\",\n  \"other\": \"<string>\",\n  \"created_on\": \"<dateTime>\",\n  \"resumed_on\": \"<dateTime>\",\n  \"updated_on\": \"<dateTime>\",\n  \"owner\": \"<string>\",\n  \"budget\": \"<string>\",\n  \"kind\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/warehouses?createMode=errorIfExists",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"warehouses"
													],
													"query": [
														{
															"key": "createMode",
															"value": "errorIfExists"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\",\n  \"error_code\": \"<string>\",\n  \"request_id\": \"<string>\"\n}"
										},
										{
											"name": "Method Not Allowed. The request method doesn't match the supported API. This happens, for example, if the application calls the API with GET method but the endpoint accepts only POST.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"p\",\n  \"warehouse_type\": \"<string>\",\n  \"warehouse_size\": \"<string>\",\n  \"wait_for_completion\": \"false\",\n  \"max_cluster_count\": \"<integer>\",\n  \"min_cluster_count\": \"<integer>\",\n  \"scaling_policy\": \"<string>\",\n  \"auto_suspend\": \"<integer>\",\n  \"auto_resume\": \"true\",\n  \"initially_suspended\": \"true\",\n  \"resource_monitor\": \"CWEM\",\n  \"comment\": \"<string>\",\n  \"enable_query_acceleration\": \"false\",\n  \"query_acceleration_max_scale_factor\": \"<integer>\",\n  \"max_concurrency_level\": \"<integer>\",\n  \"statement_queued_timeout_in_seconds\": \"<integer>\",\n  \"statement_timeout_in_seconds\": \"<integer>\",\n  \"tags\": {\n    \"deserunt0f\": \"<string>\"\n  },\n  \"type\": \"<string>\",\n  \"size\": \"<string>\",\n  \"state\": \"<string>\",\n  \"started_clusters\": \"<integer>\",\n  \"running\": \"<integer>\",\n  \"queued\": \"<integer>\",\n  \"is_default\": \"<boolean>\",\n  \"is_current\": \"<boolean>\",\n  \"available\": \"<string>\",\n  \"provisioning\": \"<string>\",\n  \"quiescing\": \"<string>\",\n  \"other\": \"<string>\",\n  \"created_on\": \"<dateTime>\",\n  \"resumed_on\": \"<dateTime>\",\n  \"updated_on\": \"<dateTime>\",\n  \"owner\": \"<string>\",\n  \"budget\": \"<string>\",\n  \"kind\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/warehouses?createMode=errorIfExists",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"warehouses"
													],
													"query": [
														{
															"key": "createMode",
															"value": "errorIfExists"
														}
													]
												}
											},
											"status": "Method Not Allowed",
											"code": 405,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\",\n  \"error_code\": \"<string>\",\n  \"request_id\": \"<string>\"\n}"
										},
										{
											"name": "Conflict. The requested operation could not be performed due to a conflicting state that could not be resolved. This usually happens when a CREATE request was performed when there is a pre-existing resource with the same name, and also without one of the ",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"p\",\n  \"warehouse_type\": \"<string>\",\n  \"warehouse_size\": \"<string>\",\n  \"wait_for_completion\": \"false\",\n  \"max_cluster_count\": \"<integer>\",\n  \"min_cluster_count\": \"<integer>\",\n  \"scaling_policy\": \"<string>\",\n  \"auto_suspend\": \"<integer>\",\n  \"auto_resume\": \"true\",\n  \"initially_suspended\": \"true\",\n  \"resource_monitor\": \"CWEM\",\n  \"comment\": \"<string>\",\n  \"enable_query_acceleration\": \"false\",\n  \"query_acceleration_max_scale_factor\": \"<integer>\",\n  \"max_concurrency_level\": \"<integer>\",\n  \"statement_queued_timeout_in_seconds\": \"<integer>\",\n  \"statement_timeout_in_seconds\": \"<integer>\",\n  \"tags\": {\n    \"deserunt0f\": \"<string>\"\n  },\n  \"type\": \"<string>\",\n  \"size\": \"<string>\",\n  \"state\": \"<string>\",\n  \"started_clusters\": \"<integer>\",\n  \"running\": \"<integer>\",\n  \"queued\": \"<integer>\",\n  \"is_default\": \"<boolean>\",\n  \"is_current\": \"<boolean>\",\n  \"available\": \"<string>\",\n  \"provisioning\": \"<string>\",\n  \"quiescing\": \"<string>\",\n  \"other\": \"<string>\",\n  \"created_on\": \"<dateTime>\",\n  \"resumed_on\": \"<dateTime>\",\n  \"updated_on\": \"<dateTime>\",\n  \"owner\": \"<string>\",\n  \"budget\": \"<string>\",\n  \"kind\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/warehouses?createMode=errorIfExists",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"warehouses"
													],
													"query": [
														{
															"key": "createMode",
															"value": "errorIfExists"
														}
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\",\n  \"error_code\": \"<string>\",\n  \"request_id\": \"<string>\"\n}"
										},
										{
											"name": "Gone. This error is primarily intended to assist the task of web maintenance by notifying the recipient that the resource is intentionally unavailable.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"p\",\n  \"warehouse_type\": \"<string>\",\n  \"warehouse_size\": \"<string>\",\n  \"wait_for_completion\": \"false\",\n  \"max_cluster_count\": \"<integer>\",\n  \"min_cluster_count\": \"<integer>\",\n  \"scaling_policy\": \"<string>\",\n  \"auto_suspend\": \"<integer>\",\n  \"auto_resume\": \"true\",\n  \"initially_suspended\": \"true\",\n  \"resource_monitor\": \"CWEM\",\n  \"comment\": \"<string>\",\n  \"enable_query_acceleration\": \"false\",\n  \"query_acceleration_max_scale_factor\": \"<integer>\",\n  \"max_concurrency_level\": \"<integer>\",\n  \"statement_queued_timeout_in_seconds\": \"<integer>\",\n  \"statement_timeout_in_seconds\": \"<integer>\",\n  \"tags\": {\n    \"deserunt0f\": \"<string>\"\n  },\n  \"type\": \"<string>\",\n  \"size\": \"<string>\",\n  \"state\": \"<string>\",\n  \"started_clusters\": \"<integer>\",\n  \"running\": \"<integer>\",\n  \"queued\": \"<integer>\",\n  \"is_default\": \"<boolean>\",\n  \"is_current\": \"<boolean>\",\n  \"available\": \"<string>\",\n  \"provisioning\": \"<string>\",\n  \"quiescing\": \"<string>\",\n  \"other\": \"<string>\",\n  \"created_on\": \"<dateTime>\",\n  \"resumed_on\": \"<dateTime>\",\n  \"updated_on\": \"<dateTime>\",\n  \"owner\": \"<string>\",\n  \"budget\": \"<string>\",\n  \"kind\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/warehouses?createMode=errorIfExists",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"warehouses"
													],
													"query": [
														{
															"key": "createMode",
															"value": "errorIfExists"
														}
													]
												}
											},
											"status": "Gone",
											"code": 410,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\",\n  \"error_code\": \"<string>\",\n  \"request_id\": \"<string>\"\n}"
										},
										{
											"name": "Limit Exceeded. The number of requests hit the rate limit. The application must slow down the frequency of hitting the API endpoints.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"p\",\n  \"warehouse_type\": \"<string>\",\n  \"warehouse_size\": \"<string>\",\n  \"wait_for_completion\": \"false\",\n  \"max_cluster_count\": \"<integer>\",\n  \"min_cluster_count\": \"<integer>\",\n  \"scaling_policy\": \"<string>\",\n  \"auto_suspend\": \"<integer>\",\n  \"auto_resume\": \"true\",\n  \"initially_suspended\": \"true\",\n  \"resource_monitor\": \"CWEM\",\n  \"comment\": \"<string>\",\n  \"enable_query_acceleration\": \"false\",\n  \"query_acceleration_max_scale_factor\": \"<integer>\",\n  \"max_concurrency_level\": \"<integer>\",\n  \"statement_queued_timeout_in_seconds\": \"<integer>\",\n  \"statement_timeout_in_seconds\": \"<integer>\",\n  \"tags\": {\n    \"deserunt0f\": \"<string>\"\n  },\n  \"type\": \"<string>\",\n  \"size\": \"<string>\",\n  \"state\": \"<string>\",\n  \"started_clusters\": \"<integer>\",\n  \"running\": \"<integer>\",\n  \"queued\": \"<integer>\",\n  \"is_default\": \"<boolean>\",\n  \"is_current\": \"<boolean>\",\n  \"available\": \"<string>\",\n  \"provisioning\": \"<string>\",\n  \"quiescing\": \"<string>\",\n  \"other\": \"<string>\",\n  \"created_on\": \"<dateTime>\",\n  \"resumed_on\": \"<dateTime>\",\n  \"updated_on\": \"<dateTime>\",\n  \"owner\": \"<string>\",\n  \"budget\": \"<string>\",\n  \"kind\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/warehouses?createMode=errorIfExists",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"warehouses"
													],
													"query": [
														{
															"key": "createMode",
															"value": "errorIfExists"
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\",\n  \"error_code\": \"<string>\",\n  \"request_id\": \"<string>\"\n}"
										},
										{
											"name": "Internal Server Error. The server hit an unrecoverable system error. The response body may include the error code and message for further guidance. The application owner may need to reach out the customer support.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"p\",\n  \"warehouse_type\": \"<string>\",\n  \"warehouse_size\": \"<string>\",\n  \"wait_for_completion\": \"false\",\n  \"max_cluster_count\": \"<integer>\",\n  \"min_cluster_count\": \"<integer>\",\n  \"scaling_policy\": \"<string>\",\n  \"auto_suspend\": \"<integer>\",\n  \"auto_resume\": \"true\",\n  \"initially_suspended\": \"true\",\n  \"resource_monitor\": \"CWEM\",\n  \"comment\": \"<string>\",\n  \"enable_query_acceleration\": \"false\",\n  \"query_acceleration_max_scale_factor\": \"<integer>\",\n  \"max_concurrency_level\": \"<integer>\",\n  \"statement_queued_timeout_in_seconds\": \"<integer>\",\n  \"statement_timeout_in_seconds\": \"<integer>\",\n  \"tags\": {\n    \"deserunt0f\": \"<string>\"\n  },\n  \"type\": \"<string>\",\n  \"size\": \"<string>\",\n  \"state\": \"<string>\",\n  \"started_clusters\": \"<integer>\",\n  \"running\": \"<integer>\",\n  \"queued\": \"<integer>\",\n  \"is_default\": \"<boolean>\",\n  \"is_current\": \"<boolean>\",\n  \"available\": \"<string>\",\n  \"provisioning\": \"<string>\",\n  \"quiescing\": \"<string>\",\n  \"other\": \"<string>\",\n  \"created_on\": \"<dateTime>\",\n  \"resumed_on\": \"<dateTime>\",\n  \"updated_on\": \"<dateTime>\",\n  \"owner\": \"<string>\",\n  \"budget\": \"<string>\",\n  \"kind\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/warehouses?createMode=errorIfExists",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"warehouses"
													],
													"query": [
														{
															"key": "createMode",
															"value": "errorIfExists"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\",\n  \"error_code\": \"<string>\",\n  \"request_id\": \"<string>\"\n}"
										},
										{
											"name": "Service Unavailable. The request was not processed due to server side timeouts. The application may retry with backoff. The jittered backoff is recommended.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"p\",\n  \"warehouse_type\": \"<string>\",\n  \"warehouse_size\": \"<string>\",\n  \"wait_for_completion\": \"false\",\n  \"max_cluster_count\": \"<integer>\",\n  \"min_cluster_count\": \"<integer>\",\n  \"scaling_policy\": \"<string>\",\n  \"auto_suspend\": \"<integer>\",\n  \"auto_resume\": \"true\",\n  \"initially_suspended\": \"true\",\n  \"resource_monitor\": \"CWEM\",\n  \"comment\": \"<string>\",\n  \"enable_query_acceleration\": \"false\",\n  \"query_acceleration_max_scale_factor\": \"<integer>\",\n  \"max_concurrency_level\": \"<integer>\",\n  \"statement_queued_timeout_in_seconds\": \"<integer>\",\n  \"statement_timeout_in_seconds\": \"<integer>\",\n  \"tags\": {\n    \"deserunt0f\": \"<string>\"\n  },\n  \"type\": \"<string>\",\n  \"size\": \"<string>\",\n  \"state\": \"<string>\",\n  \"started_clusters\": \"<integer>\",\n  \"running\": \"<integer>\",\n  \"queued\": \"<integer>\",\n  \"is_default\": \"<boolean>\",\n  \"is_current\": \"<boolean>\",\n  \"available\": \"<string>\",\n  \"provisioning\": \"<string>\",\n  \"quiescing\": \"<string>\",\n  \"other\": \"<string>\",\n  \"created_on\": \"<dateTime>\",\n  \"resumed_on\": \"<dateTime>\",\n  \"updated_on\": \"<dateTime>\",\n  \"owner\": \"<string>\",\n  \"budget\": \"<string>\",\n  \"kind\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/warehouses?createMode=errorIfExists",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"warehouses"
													],
													"query": [
														{
															"key": "createMode",
															"value": "errorIfExists"
														}
													]
												}
											},
											"status": "Service Unavailable",
											"code": 503,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\",\n  \"error_code\": \"<string>\",\n  \"request_id\": \"<string>\"\n}"
										},
										{
											"name": "Gateway Timeout. The request was not processed due to server side timeouts. The application may retry with backoff. The jittered backoff is recommended.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"p\",\n  \"warehouse_type\": \"<string>\",\n  \"warehouse_size\": \"<string>\",\n  \"wait_for_completion\": \"false\",\n  \"max_cluster_count\": \"<integer>\",\n  \"min_cluster_count\": \"<integer>\",\n  \"scaling_policy\": \"<string>\",\n  \"auto_suspend\": \"<integer>\",\n  \"auto_resume\": \"true\",\n  \"initially_suspended\": \"true\",\n  \"resource_monitor\": \"CWEM\",\n  \"comment\": \"<string>\",\n  \"enable_query_acceleration\": \"false\",\n  \"query_acceleration_max_scale_factor\": \"<integer>\",\n  \"max_concurrency_level\": \"<integer>\",\n  \"statement_queued_timeout_in_seconds\": \"<integer>\",\n  \"statement_timeout_in_seconds\": \"<integer>\",\n  \"tags\": {\n    \"deserunt0f\": \"<string>\"\n  },\n  \"type\": \"<string>\",\n  \"size\": \"<string>\",\n  \"state\": \"<string>\",\n  \"started_clusters\": \"<integer>\",\n  \"running\": \"<integer>\",\n  \"queued\": \"<integer>\",\n  \"is_default\": \"<boolean>\",\n  \"is_current\": \"<boolean>\",\n  \"available\": \"<string>\",\n  \"provisioning\": \"<string>\",\n  \"quiescing\": \"<string>\",\n  \"other\": \"<string>\",\n  \"created_on\": \"<dateTime>\",\n  \"resumed_on\": \"<dateTime>\",\n  \"updated_on\": \"<dateTime>\",\n  \"owner\": \"<string>\",\n  \"budget\": \"<string>\",\n  \"kind\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/warehouses?createMode=errorIfExists",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"warehouses"
													],
													"query": [
														{
															"key": "createMode",
															"value": "errorIfExists"
														}
													]
												}
											},
											"status": "Gateway Timeout",
											"code": 504,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\",\n  \"error_code\": \"<string>\",\n  \"request_id\": \"<string>\"\n}"
										}
									]
								},
								{
									"name": "List warehouse",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/warehouses",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"warehouses"
											],
											"query": [
												{
													"key": "like",
													"value": "<string>",
													"disabled": true
												}
											]
										},
										"description": "Show a list of warehouse filtered by pattern. Equivalent to SHOW WAREHOUSE in SQL."
									},
									"response": [
										{
											"name": "successful",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/warehouses?like=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"warehouses"
													],
													"query": [
														{
															"key": "like",
															"value": "<string>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"name\": \"UY6CN5h0v2\",\n    \"warehouse_type\": \"<string>\",\n    \"warehouse_size\": \"<string>\",\n    \"wait_for_completion\": \"false\",\n    \"max_cluster_count\": \"<integer>\",\n    \"min_cluster_count\": \"<integer>\",\n    \"scaling_policy\": \"<string>\",\n    \"auto_suspend\": \"<integer>\",\n    \"auto_resume\": \"true\",\n    \"initially_suspended\": \"false\",\n    \"resource_monitor\": \"\\\"\\\"\\\"\\\"\\\"J\\\"\\\")\\\"\\\"^\\\"\",\n    \"comment\": \"<string>\",\n    \"enable_query_acceleration\": \"false\",\n    \"query_acceleration_max_scale_factor\": \"<integer>\",\n    \"max_concurrency_level\": \"<integer>\",\n    \"statement_queued_timeout_in_seconds\": \"<integer>\",\n    \"statement_timeout_in_seconds\": \"<integer>\",\n    \"tags\": {\n      \"adipisicing9\": \"<string>\",\n      \"tempor_3bf\": \"<string>\"\n    },\n    \"type\": \"<string>\",\n    \"size\": \"<string>\",\n    \"state\": \"<string>\",\n    \"started_clusters\": \"<integer>\",\n    \"running\": \"<integer>\",\n    \"queued\": \"<integer>\",\n    \"is_default\": \"<boolean>\",\n    \"is_current\": \"<boolean>\",\n    \"available\": \"<string>\",\n    \"provisioning\": \"<string>\",\n    \"quiescing\": \"<string>\",\n    \"other\": \"<string>\",\n    \"created_on\": \"<dateTime>\",\n    \"resumed_on\": \"<dateTime>\",\n    \"updated_on\": \"<dateTime>\",\n    \"owner\": \"<string>\",\n    \"budget\": \"<string>\",\n    \"kind\": \"<string>\"\n  },\n  {\n    \"name\": \"\\\"t\\\"\\\"\\\"\\\"oV\\\"\\\"\\\"\\\"(\\\"\\\"Bu\\\"\",\n    \"warehouse_type\": \"<string>\",\n    \"warehouse_size\": \"<string>\",\n    \"wait_for_completion\": \"true\",\n    \"max_cluster_count\": \"<integer>\",\n    \"min_cluster_count\": \"<integer>\",\n    \"scaling_policy\": \"<string>\",\n    \"auto_suspend\": \"<integer>\",\n    \"auto_resume\": \"true\",\n    \"initially_suspended\": \"false\",\n    \"resource_monitor\": \"\\\"% \\\"\\\"%w[@>\\\"\\\"a\\\"\",\n    \"comment\": \"<string>\",\n    \"enable_query_acceleration\": \"false\",\n    \"query_acceleration_max_scale_factor\": \"<integer>\",\n    \"max_concurrency_level\": \"<integer>\",\n    \"statement_queued_timeout_in_seconds\": \"<integer>\",\n    \"statement_timeout_in_seconds\": \"<integer>\",\n    \"tags\": {\n      \"fugiatf4f\": \"<string>\",\n      \"officia_8\": \"<string>\"\n    },\n    \"type\": \"<string>\",\n    \"size\": \"<string>\",\n    \"state\": \"<string>\",\n    \"started_clusters\": \"<integer>\",\n    \"running\": \"<integer>\",\n    \"queued\": \"<integer>\",\n    \"is_default\": \"<boolean>\",\n    \"is_current\": \"<boolean>\",\n    \"available\": \"<string>\",\n    \"provisioning\": \"<string>\",\n    \"quiescing\": \"<string>\",\n    \"other\": \"<string>\",\n    \"created_on\": \"<dateTime>\",\n    \"resumed_on\": \"<dateTime>\",\n    \"updated_on\": \"<dateTime>\",\n    \"owner\": \"<string>\",\n    \"budget\": \"<string>\",\n    \"kind\": \"<string>\"\n  }\n]"
										},
										{
											"name": "Bad Request. The request payload is invalid or malformed. This happens if the application didn't send the correct request payload. The response body may include the error code and message indicating the actual cause. The application must reconstruct the r",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/warehouses?like=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"warehouses"
													],
													"query": [
														{
															"key": "like",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\",\n  \"error_code\": \"<string>\",\n  \"request_id\": \"<string>\"\n}"
										},
										{
											"name": "Unauthorized. The request is not authorized. This happens if the attached access token is invalid or missing. The response body may include the error code and message indicating the actual cause, e.g., expired, invalid token. The application must obtain a",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/warehouses?like=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"warehouses"
													],
													"query": [
														{
															"key": "like",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\",\n  \"error_code\": \"<string>\",\n  \"request_id\": \"<string>\"\n}"
										},
										{
											"name": "Forbidden. The request is forbidden. This can also happen if the request is made even if the API is not enabled.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/warehouses?like=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"warehouses"
													],
													"query": [
														{
															"key": "like",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\",\n  \"error_code\": \"<string>\",\n  \"request_id\": \"<string>\"\n}"
										},
										{
											"name": "Not Found. The request endpoint is not valid. This happens if the API endpoint does not exist, or if the API is not enabled.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/warehouses?like=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"warehouses"
													],
													"query": [
														{
															"key": "like",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\",\n  \"error_code\": \"<string>\",\n  \"request_id\": \"<string>\"\n}"
										},
										{
											"name": "Method Not Allowed. The request method doesn't match the supported API. This happens, for example, if the application calls the API with GET method but the endpoint accepts only POST.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/warehouses?like=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"warehouses"
													],
													"query": [
														{
															"key": "like",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Method Not Allowed",
											"code": 405,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\",\n  \"error_code\": \"<string>\",\n  \"request_id\": \"<string>\"\n}"
										},
										{
											"name": "Conflict. The requested operation could not be performed due to a conflicting state that could not be resolved. This usually happens when a CREATE request was performed when there is a pre-existing resource with the same name, and also without one of the ",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/warehouses?like=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"warehouses"
													],
													"query": [
														{
															"key": "like",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\",\n  \"error_code\": \"<string>\",\n  \"request_id\": \"<string>\"\n}"
										},
										{
											"name": "Gone. This error is primarily intended to assist the task of web maintenance by notifying the recipient that the resource is intentionally unavailable.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/warehouses?like=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"warehouses"
													],
													"query": [
														{
															"key": "like",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Gone",
											"code": 410,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\",\n  \"error_code\": \"<string>\",\n  \"request_id\": \"<string>\"\n}"
										},
										{
											"name": "Limit Exceeded. The number of requests hit the rate limit. The application must slow down the frequency of hitting the API endpoints.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/warehouses?like=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"warehouses"
													],
													"query": [
														{
															"key": "like",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\",\n  \"error_code\": \"<string>\",\n  \"request_id\": \"<string>\"\n}"
										},
										{
											"name": "Internal Server Error. The server hit an unrecoverable system error. The response body may include the error code and message for further guidance. The application owner may need to reach out the customer support.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/warehouses?like=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"warehouses"
													],
													"query": [
														{
															"key": "like",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\",\n  \"error_code\": \"<string>\",\n  \"request_id\": \"<string>\"\n}"
										},
										{
											"name": "Service Unavailable. The request was not processed due to server side timeouts. The application may retry with backoff. The jittered backoff is recommended.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/warehouses?like=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"warehouses"
													],
													"query": [
														{
															"key": "like",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Service Unavailable",
											"code": 503,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\",\n  \"error_code\": \"<string>\",\n  \"request_id\": \"<string>\"\n}"
										},
										{
											"name": "Gateway Timeout. The request was not processed due to server side timeouts. The application may retry with backoff. The jittered backoff is recommended.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/warehouses?like=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"warehouses"
													],
													"query": [
														{
															"key": "like",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Gateway Timeout",
											"code": 504,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\",\n  \"error_code\": \"<string>\",\n  \"request_id\": \"<string>\"\n}"
										}
									]
								}
							]
						}
					]
				}
			]
		}
	],
	"auth": {
		"type": "apikey",
		"apikey": [
			{
				"key": "key",
				"value": "Authorization",
				"type": "string"
			},
			{
				"key": "value",
				"value": "Snowflake Token=\"{{sessionToken}}\"",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://org-account.snowflakecomputing.com"
		},
		{
			"key": "name",
			"value": "\"C:\""
		},
		{
			"key": "name",
			"value": "\"C:\""
		},
		{
			"key": "name",
			"value": "\"C:\""
		},
		{
			"key": "name",
			"value": "\"C:\""
		},
		{
			"key": "name",
			"value": "\"C:\""
		}
	]
}