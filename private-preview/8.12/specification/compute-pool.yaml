openapi: 3.0.0
servers:
  - description: Snowflake Compute Pools API
    url: https://org-account.snowflakecomputing.com
info:
  version: 0.0.1
  title: Snowflake Compute Pools API
  description: >-
    The Snowflake Compute Pools API is a REST API that you can use to access, update, and perform certain actions on Compute Pool resources.
  contact:
    name: Snowflake, Inc.
    url: https://snowflake.com
    email: support@snowflake.com
paths:
  /api/v2/compute-pools:
    get:
      summary: List compute pools
      tags:
        - compute-pool
      description: Lists the compute pools under the account.
      operationId: fetchComputePools
      parameters:
        - $ref: 'common.yaml#/components/parameters/like'
        - $ref: 'common.yaml#/components/parameters/startsWith'
        - $ref: 'common.yaml#/components/parameters/showLimit'
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ComputePool'
        '400':
          $ref: 'common.yaml#/components/responses/400BadRequest'
        '401':
          $ref: 'common.yaml#/components/responses/401Unauthorized'
        '403':
          $ref: 'common.yaml#/components/responses/403Forbidden'
        '404':
          $ref: 'common.yaml#/components/responses/404NotFound'
        '405':
          $ref: 'common.yaml#/components/responses/405MethodNotAllowed'
        '500':
          $ref: 'common.yaml#/components/responses/500InternalServerError'
        '503':
          $ref: 'common.yaml#/components/responses/503ServiceUnavailable'
        '504':
          $ref: 'common.yaml#/components/responses/504GatewayTimeout'
    post:
      summary: Create a compute pool
      tags:
        - compute-pool
      description: Create a compute pool, with standard create modifiers
        as query parameters. See the Compute Pool component definition
        for what is required to be provided in the request body.
      operationId: createComputePool
      parameters:
        - $ref: 'common.yaml#/components/parameters/createMode'
        - name: initiallySuspended
          in: query
          description: Specifies whether the compute pool is created initially in the suspended state.
          schema:
            type: boolean
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ComputePool'
      responses:
        '200':
          $ref: 'common.yaml#/components/responses/200SuccessResponse'
        '400':
          $ref: 'common.yaml#/components/responses/400BadRequest'
        '401':
          $ref: 'common.yaml#/components/responses/401Unauthorized'
        '403':
          $ref: 'common.yaml#/components/responses/403Forbidden'
        '404':
          $ref: 'common.yaml#/components/responses/404NotFound'
        '405':
          $ref: 'common.yaml#/components/responses/405MethodNotAllowed'
        '409':
          $ref: 'common.yaml#/components/responses/409Conflict'
        '500':
          $ref: 'common.yaml#/components/responses/500InternalServerError'
        '503':
          $ref: 'common.yaml#/components/responses/503ServiceUnavailable'
        '504':
          $ref: 'common.yaml#/components/responses/504GatewayTimeout'
  /api/v2/compute-pools/{name}:
    get:
      summary: Fetch a compute pool.
      tags:
        - compute-pool
      description: Fetch a compute pool using the SHOW command output.
      operationId: fetchComputePool
      parameters:
        - $ref: 'common.yaml#/components/parameters/name'
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComputePool'
        '400':
          $ref: 'common.yaml#/components/responses/400BadRequest'
        '401':
          $ref: 'common.yaml#/components/responses/401Unauthorized'
        '403':
          $ref: 'common.yaml#/components/responses/403Forbidden'
        '404':
          $ref: 'common.yaml#/components/responses/404NotFound'
        '405':
          $ref: 'common.yaml#/components/responses/405MethodNotAllowed'
        '500':
          $ref: 'common.yaml#/components/responses/500InternalServerError'
        '503':
          $ref: 'common.yaml#/components/responses/503ServiceUnavailable'
        '504':
          $ref: 'common.yaml#/components/responses/504GatewayTimeout'
    delete:
      parameters:
        - $ref: 'common.yaml#/components/parameters/name'
        - $ref: 'common.yaml#/components/parameters/ifExists'
      summary: Delete a compute pool
      tags:
        - compute-pool
      description: Delete a compute pool with the given name. If ifExists is used, the operation will
        succeed even if the object does not exist. Otherwise, there will be a 404 failure
        if the drop is unsuccessful.
      operationId: deleteComputePool
      responses:
        '200':
          $ref: 'common.yaml#/components/responses/200SuccessResponse'
        '400':
          $ref: 'common.yaml#/components/responses/400BadRequest'
        '401':
          $ref: 'common.yaml#/components/responses/401Unauthorized'
        '403':
          $ref: 'common.yaml#/components/responses/403Forbidden'
        '404':
          $ref: 'common.yaml#/components/responses/404NotFound'
        '405':
          $ref: 'common.yaml#/components/responses/405MethodNotAllowed'
        '500':
          $ref: 'common.yaml#/components/responses/500InternalServerError'
        '503':
          $ref: 'common.yaml#/components/responses/503ServiceUnavailable'
        '504':
          $ref: 'common.yaml#/components/responses/504GatewayTimeout'
  /api/v2/compute-pools/{name}:resume:
    post:
      summary: Resume a compute pool
      tags:
        - compute-pool
      description: Resume a compute pool, if suspended. This is a no-op if it is already running.
      operationId: resumeComputePool
      parameters:
        - $ref: 'common.yaml#/components/parameters/name'
      responses:
        '200':
          $ref: 'common.yaml#/components/responses/200SuccessResponse'
        '400':
          $ref: 'common.yaml#/components/responses/400BadRequest'
        '401':
          $ref: 'common.yaml#/components/responses/401Unauthorized'
        '403':
          $ref: 'common.yaml#/components/responses/403Forbidden'
        '404':
          $ref: 'common.yaml#/components/responses/404NotFound'
        '405':
          $ref: 'common.yaml#/components/responses/405MethodNotAllowed'
        '500':
          $ref: 'common.yaml#/components/responses/500InternalServerError'
        '503':
          $ref: 'common.yaml#/components/responses/503ServiceUnavailable'
        '504':
          $ref: 'common.yaml#/components/responses/504GatewayTimeout'
  /api/v2/compute-pools/{name}:suspend:
    post:
      summary: Perform an action on a compute pool
      tags:
        - compute-pool
      description: Suspend a compute pool.
      operationId: suspendComputePool
      parameters:
        - $ref: 'common.yaml#/components/parameters/name'
      responses:
        '200':
          $ref: 'common.yaml#/components/responses/200SuccessResponse'
        '400':
          $ref: 'common.yaml#/components/responses/400BadRequest'
        '401':
          $ref: 'common.yaml#/components/responses/401Unauthorized'
        '403':
          $ref: 'common.yaml#/components/responses/403Forbidden'
        '404':
          $ref: 'common.yaml#/components/responses/404NotFound'
        '405':
          $ref: 'common.yaml#/components/responses/405MethodNotAllowed'
        '500':
          $ref: 'common.yaml#/components/responses/500InternalServerError'
        '503':
          $ref: 'common.yaml#/components/responses/503ServiceUnavailable'
        '504':
          $ref: 'common.yaml#/components/responses/504GatewayTimeout'
  /api/v2/compute-pools/{name}:stopallservices:
    post:
      summary: Stops all services on the compute pool.
      tags:
        - compute-pool
      description: Stop all services in the compute pool.
      operationId: stopAllServicesInComputePool
      parameters:
        - $ref: 'common.yaml#/components/parameters/name'
      responses:
        '200':
          $ref: 'common.yaml#/components/responses/200SuccessResponse'
        '400':
          $ref: 'common.yaml#/components/responses/400BadRequest'
        '401':
          $ref: 'common.yaml#/components/responses/401Unauthorized'
        '403':
          $ref: 'common.yaml#/components/responses/403Forbidden'
        '404':
          $ref: 'common.yaml#/components/responses/404NotFound'
        '405':
          $ref: 'common.yaml#/components/responses/405MethodNotAllowed'
        '500':
          $ref: 'common.yaml#/components/responses/500InternalServerError'
        '503':
          $ref: 'common.yaml#/components/responses/503ServiceUnavailable'
        '504':
          $ref: 'common.yaml#/components/responses/504GatewayTimeout'
components:
  schemas:
    ComputePool:
      type: object
      description: A Snowflake compute pool.
      properties:
        name:
          $ref: './common.yaml#/components/schemas/Identifier'
        min_nodes:
          type: integer
          description: The minimum number of nodes for the compute pool.
        max_nodes:
          type: integer
          description: The maximum number of nodes for the compute pool.
        instance_family:
          type: string
          description: The instance family for the compute pool.
        auto_resume:
          type: boolean
          description: Whether Snowflake will automatically resumes the compute pool when any statement that requires the compute pool is submitted.
        comment:
          type: string
          description: A comment describing the compute pool.
        state:
          type: string
          description: The current state of the compute pool.
          readOnly: true
          enum: [UNKNOWN, STARTING, IDLE, ACTIVE, STOPPING, SUSPENDED, RESIZING]
        num_services:
          type: integer
          description: The number of services on the compute pool.
          readOnly: true
        auto_suspend_secs:
          type: integer
          description: The number of seconds until the compute pool automatically suspends.
          format: int64
        active_nodes:
          type: integer
          description: The number of currently active nodes on the compute pool.
          readOnly: true
        idle_nodes:
          type: integer
          description: The number of currently idle nodes on the compute pool.
          readOnly: true
        created_on:
          type: string
          description: The time the compute pool was created on.
          format: date-time
          readOnly: true
        resumed_on:
          type: string
          description: The time the compute pool was last resumed on.
          format: date-time
          readOnly: true
        updated_on:
          type: string
          description: The time the compute pool was last updated on.
          format: date-time
          readOnly: true
        owner:
          type: string
          description: The identifier for the current owner of the compute pool.
          readOnly: true
      example:
        name: compute_pool_name
        warehouse: test_wh
        min_nodes: 4
        max_nodes: 5
        instance_family: compute_pool_family
        auto_resume: false
        comment: test_comment
        state: STARTING
        num_services: 1
        auto_suspend_secs: 10
        active_nodes: 2
        idle_nodes: 2
        created_on: "YYYY-MM-DDTHH:MI:SS.FF6"
        updated_on: "YYYY-MM-DDTHH:MI:SS.FF6"
        resumed_on: "YYYY-MM-DDTHH:MI:SS.FF6"
        owner: POOL_ADMIN
      required:
        - name
        - instance_family
        - min_nodes
        - max_nodes
tags:
  - name: compute-pool
