/** merged spec
  * merged spec
  *
  * The version of the OpenAPI document: 1.0.0
  * Contact: team@openapitools.org
  *
  * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
  * https://openapi-generator.tech
  * Do not edit the class manually.
  */
package datoria.snowflake.models

import io.circe.*
import io.circe.syntax.*
import io.circe.{Decoder, Encoder}

import java.time.Instant
import scala.collection.immutable.Seq

/** 
  * @param securable 
  * @param containingScope 
  * @param securableType Type of the securable to be granted.
  * @param grantOption If true, allows the recipient role to grant the privileges to other roles.
  * @param privileges List of privileges to be granted.
  * @param createdOn Date and time when the grant was created
  * @param grantedBy The role that granted this privilege to this grantee
  */
case class Grant2(
    securable: Option[Securable] = None,
    containingScope: Option[ContainingScope] = None,
    securableType: String,
    grantOption: Option[Boolean] = None,
    privileges: Option[Seq[String]] = None,
    createdOn: Option[Instant] = None,
    grantedBy: Option[String] = None
)
  
object Grant2 {
  given encoderGrant2: Encoder[Grant2] = Encoder.instance { t =>
    Json.fromFields{
      Seq(
        t.securable.map(v => "securable" -> v.asJson),
        t.containingScope.map(v => "containing_scope" -> v.asJson),
        Some("securable_type" -> t.securableType.asJson),
        t.grantOption.map(v => "grant_option" -> v.asJson),
        t.privileges.map(v => "privileges" -> v.asJson),
        t.createdOn.map(v => "created_on" -> v.asJson),
        t.grantedBy.map(v => "granted_by" -> v.asJson)
      ).flatten
    }
  }
  given decoderGrant2: Decoder[Grant2] = Decoder.instance { c =>
    for {
      securable <- c.downField("securable").as[Option[Securable]]
      containingScope <- c.downField("containing_scope").as[Option[ContainingScope]]
      securableType <- c.downField("securable_type").as[String]
      grantOption <- c.downField("grant_option").as[Option[Boolean]]
      privileges <- c.downField("privileges").as[Option[Seq[String]]]
      createdOn <- c.downField("created_on").as[Option[Instant]]
      grantedBy <- c.downField("granted_by").as[Option[String]]
    } yield Grant2(
      securable = securable,
      containingScope = containingScope,
      securableType = securableType,
      grantOption = grantOption,
      privileges = privileges,
      createdOn = createdOn,
      grantedBy = grantedBy
    )
  }
}

