/** merged spec
  * merged spec
  *
  * The version of the OpenAPI document: 1.0.0
  * Contact: team@openapitools.org
  *
  * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
  * https://openapi-generator.tech
  * Do not edit the class manually.
  */
package datoria.snowflake.models

import io.circe.*
import io.circe.syntax.*
import io.circe.{Decoder, Encoder}


/** 
  * @param catalogSource 
  */
case class Catalog(
    catalogSource: CatalogCatalogSource
)
  
object Catalog {
  given encoderCatalog: Encoder[Catalog] = Encoder.instance { t =>
    Json.fromFields{
      Seq(
        Some("catalog_source" -> t.catalogSource.asJson)
      ).flatten
    }
  }
  given decoderCatalog: Decoder[Catalog] = Decoder.instance { c =>
    for {
      catalogSource <- c.downField("catalog_source").as[CatalogCatalogSource]
    } yield Catalog(
      catalogSource = catalogSource
    )
  }
}

