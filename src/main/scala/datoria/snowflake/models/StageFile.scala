/** merged spec
  * merged spec
  *
  * The version of the OpenAPI document: 1.0.0
  * Contact: team@openapitools.org
  *
  * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
  * https://openapi-generator.tech
  * Do not edit the class manually.
  */
package datoria.snowflake.models

import io.circe.*
import io.circe.syntax.*
import io.circe.{Decoder, Encoder}


/** A file on a snowflake stage.
  * @param name Name of the file.
  * @param size Size of the file.
  * @param md5 md5 hash of the file.
  * @param lastModified Date and time when the file was last modified.
  */
case class StageFile(
    name: Option[String] = None,
    size: Option[String] = None,
    md5: Option[String] = None,
    lastModified: Option[String] = None
)
  
object StageFile {
  given encoderStageFile: Encoder[StageFile] = Encoder.instance { t =>
    Json.fromFields{
      Seq(
        t.name.map(v => "name" -> v.asJson),
        t.size.map(v => "size" -> v.asJson),
        t.md5.map(v => "md5" -> v.asJson),
        t.lastModified.map(v => "last_modified" -> v.asJson)
      ).flatten
    }
  }
  given decoderStageFile: Decoder[StageFile] = Decoder.instance { c =>
    for {
      name <- c.downField("name").as[Option[String]]
      size <- c.downField("size").as[Option[String]]
      md5 <- c.downField("md5").as[Option[String]]
      lastModified <- c.downField("last_modified").as[Option[String]]
    } yield StageFile(
      name = name,
      size = size,
      md5 = md5,
      lastModified = lastModified
    )
  }
}

