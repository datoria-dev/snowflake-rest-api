/** merged spec
  * merged spec
  *
  * The version of the OpenAPI document: 1.0.0
  * Contact: team@openapitools.org
  *
  * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
  * https://openapi-generator.tech
  * Do not edit the class manually.
  */
package datoria.snowflake.models

import io.circe.*
import io.circe.syntax.*
import io.circe.{Decoder, Encoder}

import scala.collection.immutable.Seq

/** Array of unique account identifiers.
  * @param accounts 
  */
case class AccountIdentifiers(
    accounts: Seq[String]
)
  
object AccountIdentifiers {
  given encoderAccountIdentifiers: Encoder[AccountIdentifiers] = Encoder.instance { t =>
    Json.fromFields{
      Seq(
        Some("accounts" -> t.accounts.asJson)
      ).flatten
    }
  }
  given decoderAccountIdentifiers: Decoder[AccountIdentifiers] = Decoder.instance { c =>
    for {
      accounts <- c.downField("accounts").as[Seq[String]]
    } yield AccountIdentifiers(
      accounts = accounts
    )
  }
}

