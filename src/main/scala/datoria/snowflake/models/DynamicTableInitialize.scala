/** merged spec
  * merged spec
  *
  * The version of the OpenAPI document: 1.0.0
  * Contact: team@openapitools.org
  *
  * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
  * https://openapi-generator.tech
  * Do not edit the class manually.
  */
package datoria.snowflake.models

import io.circe.*
import io.circe.syntax.*
import io.circe.{Decoder, Encoder}


/** Specifies the behavior of the initial refresh of the dynamic table
  */
enum DynamicTableInitialize(val value: String) {
  case ONCREATE extends DynamicTableInitialize("ON_CREATE")
  case ONSCHEDULE extends DynamicTableInitialize("ON_SCHEDULE")
}

object DynamicTableInitialize {

  def withValueOpt(value: String): Option[DynamicTableInitialize] = DynamicTableInitialize.values.find(_.value == value)
  def withValue(value: String): DynamicTableInitialize =
    withValueOpt(value).getOrElse(throw java.lang.IllegalArgumentException(s"DynamicTableInitialize enum case not found: $value"))

  given decoderDynamicTableInitialize: Decoder[DynamicTableInitialize] = Decoder.decodeString.map(withValue)
  given encoderDynamicTableInitialize: Encoder[DynamicTableInitialize] = Encoder.encodeString.contramap[DynamicTableInitialize](_.value)

}

