/** merged spec
  * merged spec
  *
  * The version of the OpenAPI document: 1.0.0
  * Contact: team@openapitools.org
  *
  * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
  * https://openapi-generator.tech
  * Do not edit the class manually.
  */
package datoria.snowflake.models

import io.circe.*
import io.circe.syntax.*
import io.circe.{Decoder, Encoder}


/** Kind of the view, permanent (default) or temporary
  */
enum ViewKind(val value: String) {
  case PERMANENT extends ViewKind("PERMANENT")
  case TEMPORARY extends ViewKind("TEMPORARY")
}

object ViewKind {

  def withValueOpt(value: String): Option[ViewKind] = ViewKind.values.find(_.value == value)
  def withValue(value: String): ViewKind =
    withValueOpt(value).getOrElse(throw java.lang.IllegalArgumentException(s"ViewKind enum case not found: $value"))

  given decoderViewKind: Decoder[ViewKind] = Decoder.decodeString.map(withValue)
  given encoderViewKind: Encoder[ViewKind] = Encoder.encodeString.contramap[ViewKind](_.value)

}

