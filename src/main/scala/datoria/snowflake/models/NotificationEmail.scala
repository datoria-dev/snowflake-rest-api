/** merged spec
  * merged spec
  *
  * The version of the OpenAPI document: 1.0.0
  * Contact: team@openapitools.org
  *
  * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
  * https://openapi-generator.tech
  * Do not edit the class manually.
  */
package datoria.snowflake.models

import io.circe.*
import io.circe.syntax.*
import io.circe.{Decoder, Encoder}

import scala.collection.immutable.Seq

/** 
  * @param allowedRecipients A comma-separated list of quoted email addresses that can receive notification emails from this integration.
  * @param defaultRecipients A comma-separated list of default recipients for messages sent with this integration.
  * @param defaultSubject the default subject line for messages sent with this integration.
  */
case class NotificationEmail(
    allowedRecipients: Option[Seq[String]] = None,
    defaultRecipients: Option[Seq[String]] = None,
    defaultSubject: Option[String] = None
)
  
object NotificationEmail {
  given encoderNotificationEmail: Encoder[NotificationEmail] = Encoder.instance { t =>
    Json.fromFields{
      Seq(
        t.allowedRecipients.map(v => "allowed_recipients" -> v.asJson),
        t.defaultRecipients.map(v => "default_recipients" -> v.asJson),
        t.defaultSubject.map(v => "default_subject" -> v.asJson)
      ).flatten
    }
  }
  given decoderNotificationEmail: Decoder[NotificationEmail] = Decoder.instance { c =>
    for {
      allowedRecipients <- c.downField("allowed_recipients").as[Option[Seq[String]]]
      defaultRecipients <- c.downField("default_recipients").as[Option[Seq[String]]]
      defaultSubject <- c.downField("default_subject").as[Option[String]]
    } yield NotificationEmail(
      allowedRecipients = allowedRecipients,
      defaultRecipients = defaultRecipients,
      defaultSubject = defaultSubject
    )
  }
}

