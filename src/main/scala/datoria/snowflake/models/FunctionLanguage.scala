/** merged spec
  * merged spec
  *
  * The version of the OpenAPI document: 1.0.0
  * Contact: team@openapitools.org
  *
  * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
  * https://openapi-generator.tech
  * Do not edit the class manually.
  */
package datoria.snowflake.models

import io.circe.*
import io.circe.syntax.*
import io.circe.{Decoder, Encoder}


/** 
  * @param language Language that the function/procedure is written in. Possible values include: JAVA, JAVASCRIPT, PYTHON, SCALA, SQL
  * @param calledOnNullInput Decide if the function/procedure can receive null input
  */
case class FunctionLanguage(
    language: String,
    calledOnNullInput: Option[Boolean] = None
)
  
object FunctionLanguage {
  given encoderFunctionLanguage: Encoder[FunctionLanguage] = Encoder.instance { t =>
    Json.fromFields{
      Seq(
        Some("language" -> t.language.asJson),
        t.calledOnNullInput.map(v => "called_on_null_input" -> v.asJson)
      ).flatten
    }
  }
  given decoderFunctionLanguage: Decoder[FunctionLanguage] = Decoder.instance { c =>
    for {
      language <- c.downField("language").as[String]
      calledOnNullInput <- c.downField("called_on_null_input").as[Option[Boolean]]
    } yield FunctionLanguage(
      language = language,
      calledOnNullInput = calledOnNullInput
    )
  }
}

