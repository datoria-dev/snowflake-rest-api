/** merged spec
  * merged spec
  *
  * The version of the OpenAPI document: 1.0.0
  * Contact: team@openapitools.org
  *
  * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
  * https://openapi-generator.tech
  * Do not edit the class manually.
  */
package datoria.snowflake.models

import io.circe.*
import io.circe.syntax.*
import io.circe.{Decoder, Encoder}


/** 
  * @param storageBaseUrl Specifies the base URL for your cloud storage location.
  * @param encryption 
  */
case class StorageLocationGcs(
    storageBaseUrl: String,
    encryption: Option[Encryption] = None
)
  
object StorageLocationGcs {
  given encoderStorageLocationGcs: Encoder[StorageLocationGcs] = Encoder.instance { t =>
    Json.fromFields{
      Seq(
        Some("storage_base_url" -> t.storageBaseUrl.asJson),
        t.encryption.map(v => "encryption" -> v.asJson)
      ).flatten
    }
  }
  given decoderStorageLocationGcs: Decoder[StorageLocationGcs] = Decoder.instance { c =>
    for {
      storageBaseUrl <- c.downField("storage_base_url").as[String]
      encryption <- c.downField("encryption").as[Option[Encryption]]
    } yield StorageLocationGcs(
      storageBaseUrl = storageBaseUrl,
      encryption = encryption
    )
  }
}

