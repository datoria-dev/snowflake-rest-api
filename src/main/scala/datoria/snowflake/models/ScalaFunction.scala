/** merged spec
  * merged spec
  *
  * The version of the OpenAPI document: 1.0.0
  * Contact: team@openapitools.org
  *
  * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
  * https://openapi-generator.tech
  * Do not edit the class manually.
  */
package datoria.snowflake.models

import io.circe.*
import io.circe.syntax.*
import io.circe.{Decoder, Encoder}

import scala.collection.immutable.Seq

/** 
  * @param targetPath Specifies where Snowflake should write the compiled code for inline function/procedures
  */
case class ScalaFunction(
    targetPath: Option[String] = None
)
  
object ScalaFunction {
  given encoderScalaFunction: Encoder[ScalaFunction] = Encoder.instance { t =>
    Json.fromFields{
      Seq(
        t.targetPath.map(v => "target_path" -> v.asJson)
      ).flatten
    }
  }
  given decoderScalaFunction: Decoder[ScalaFunction] = Decoder.instance { c =>
    for {
      targetPath <- c.downField("target_path").as[Option[String]]
    } yield ScalaFunction(
      targetPath = targetPath
    )
  }
}

