/** merged spec
  * merged spec
  *
  * The version of the OpenAPI document: 1.0.0
  * Contact: team@openapitools.org
  *
  * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
  * https://openapi-generator.tech
  * Do not edit the class manually.
  */
package datoria.snowflake.models

import io.circe.*
import io.circe.syntax.*
import io.circe.{Decoder, Encoder}


/** What permissions should the procedure execution be called with
  */
enum ProcedureExecuteAs(val value: String) {
  case CALLER extends ProcedureExecuteAs("CALLER")
  case OWNER extends ProcedureExecuteAs("OWNER")
}

object ProcedureExecuteAs {

  def withValueOpt(value: String): Option[ProcedureExecuteAs] = ProcedureExecuteAs.values.find(_.value == value)
  def withValue(value: String): ProcedureExecuteAs =
    withValueOpt(value).getOrElse(throw java.lang.IllegalArgumentException(s"ProcedureExecuteAs enum case not found: $value"))

  given decoderProcedureExecuteAs: Decoder[ProcedureExecuteAs] = Decoder.decodeString.map(withValue)
  given encoderProcedureExecuteAs: Encoder[ProcedureExecuteAs] = Encoder.encodeString.contramap[ProcedureExecuteAs](_.value)

}

