/** merged spec
  * merged spec
  *
  * The version of the OpenAPI document: 1.0.0
  * Contact: team@openapitools.org
  *
  * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
  * https://openapi-generator.tech
  * Do not edit the class manually.
  */
package datoria.snowflake.models

import io.circe.*
import io.circe.syntax.*
import io.circe.{Decoder, Encoder}


/** 
  * @param catalogUri Customer's Polaris account locator URL
  * @param warehouse Name of the catalog to use in Polaris
  */
case class RestConfig(
    catalogUri: String,
    warehouse: String
)
  
object RestConfig {
  given encoderRestConfig: Encoder[RestConfig] = Encoder.instance { t =>
    Json.fromFields{
      Seq(
        Some("catalog_uri" -> t.catalogUri.asJson),
        Some("warehouse" -> t.warehouse.asJson)
      ).flatten
    }
  }
  given decoderRestConfig: Decoder[RestConfig] = Decoder.instance { c =>
    for {
      catalogUri <- c.downField("catalog_uri").as[String]
      warehouse <- c.downField("warehouse").as[String]
    } yield RestConfig(
      catalogUri = catalogUri,
      warehouse = warehouse
    )
  }
}

