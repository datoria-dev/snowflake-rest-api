/** merged spec
  * merged spec
  *
  * The version of the OpenAPI document: 1.0.0
  * Contact: team@openapitools.org
  *
  * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
  * https://openapi-generator.tech
  * Do not edit the class manually.
  */
package datoria.snowflake.models

import io.circe.*
import io.circe.syntax.*
import io.circe.{Decoder, Encoder}


/** Specifies service specification with a stage file.
  * @param stage Specifies the Snowflake internal stage where the specification file is stored; for example, @tutorial_stage.
  * @param specFile Specifies the path to the service specification file on the stage; for example, 'some-dir/echo_spec.yaml'.
  */
case class ServiceSpecStageFile(
    stage: String,
    specFile: String
)
  
object ServiceSpecStageFile {
  given encoderServiceSpecStageFile: Encoder[ServiceSpecStageFile] = Encoder.instance { t =>
    Json.fromFields{
      Seq(
        Some("stage" -> t.stage.asJson),
        Some("spec_file" -> t.specFile.asJson)
      ).flatten
    }
  }
  given decoderServiceSpecStageFile: Decoder[ServiceSpecStageFile] = Decoder.instance { c =>
    for {
      stage <- c.downField("stage").as[String]
      specFile <- c.downField("spec_file").as[String]
    } yield ServiceSpecStageFile(
      stage = stage,
      specFile = specFile
    )
  }
}

