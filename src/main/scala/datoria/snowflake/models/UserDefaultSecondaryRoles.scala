/** merged spec
  * merged spec
  *
  * The version of the OpenAPI document: 1.0.0
  * Contact: team@openapitools.org
  *
  * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
  * https://openapi-generator.tech
  * Do not edit the class manually.
  */
package datoria.snowflake.models

import io.circe.*
import io.circe.syntax.*
import io.circe.{Decoder, Encoder}


/** The default secondary roles of this user to use when starting a session. Only valid set values are ALL or NONE. Default is ALL after 2024-07 BCR.
  */
enum UserDefaultSecondaryRoles(val value: String) {
  case ALL extends UserDefaultSecondaryRoles("ALL")
  case NONE extends UserDefaultSecondaryRoles("NONE")
}

object UserDefaultSecondaryRoles {

  def withValueOpt(value: String): Option[UserDefaultSecondaryRoles] = UserDefaultSecondaryRoles.values.find(_.value == value)
  def withValue(value: String): UserDefaultSecondaryRoles =
    withValueOpt(value).getOrElse(throw java.lang.IllegalArgumentException(s"UserDefaultSecondaryRoles enum case not found: $value"))

  given decoderUserDefaultSecondaryRoles: Decoder[UserDefaultSecondaryRoles] = Decoder.decodeString.map(withValue)
  given encoderUserDefaultSecondaryRoles: Encoder[UserDefaultSecondaryRoles] = Encoder.encodeString.contramap[UserDefaultSecondaryRoles](_.value)

}

