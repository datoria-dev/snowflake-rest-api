/** merged spec
  * merged spec
  *
  * The version of the OpenAPI document: 1.0.0
  * Contact: team@openapitools.org
  *
  * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
  * https://openapi-generator.tech
  * Do not edit the class manually.
  */
package datoria.snowflake.models

import io.circe.*
import io.circe.syntax.*
import io.circe.{Decoder, Encoder}


/** Specifies service specification with inline text.
  * @param specText Specifies service specification. You can use a pair of dollar signs ($$) to delimit the beginning and ending of the specification string.
  */
case class ServiceSpecInlineText(
    specText: String
)
  
object ServiceSpecInlineText {
  given encoderServiceSpecInlineText: Encoder[ServiceSpecInlineText] = Encoder.instance { t =>
    Json.fromFields{
      Seq(
        Some("spec_text" -> t.specText.asJson)
      ).flatten
    }
  }
  given decoderServiceSpecInlineText: Decoder[ServiceSpecInlineText] = Decoder.instance { c =>
    for {
      specText <- c.downField("spec_text").as[String]
    } yield ServiceSpecInlineText(
      specText = specText
    )
  }
}

