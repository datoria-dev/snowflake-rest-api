/** merged spec
  * merged spec
  *
  * The version of the OpenAPI document: 1.0.0
  * Contact: team@openapitools.org
  *
  * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
  * https://openapi-generator.tech
  * Do not edit the class manually.
  */
package datoria.snowflake.models

import io.circe.*
import io.circe.syntax.*
import io.circe.{Decoder, Encoder}


/** 
  * @param timestamp Timestamp of the point of time.
  */
case class PointOfTimeTimestamp(
    timestamp: String
)
  
object PointOfTimeTimestamp {
  given encoderPointOfTimeTimestamp: Encoder[PointOfTimeTimestamp] = Encoder.instance { t =>
    Json.fromFields{
      Seq(
        Some("timestamp" -> t.timestamp.asJson)
      ).flatten
    }
  }
  given decoderPointOfTimeTimestamp: Decoder[PointOfTimeTimestamp] = Decoder.instance { c =>
    for {
      timestamp <- c.downField("timestamp").as[String]
    } yield PointOfTimeTimestamp(
      timestamp = timestamp
    )
  }
}

