/** merged spec
  * merged spec
  *
  * The version of the OpenAPI document: 1.0.0
  * Contact: team@openapitools.org
  *
  * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
  * https://openapi-generator.tech
  * Do not edit the class manually.
  */
package datoria.snowflake.models

import io.circe.*
import io.circe.syntax.*
import io.circe.{Decoder, Encoder}


/** 
  * @param name 
  * @param storageProvider 
  */
case class StorageLocation(
    name: String,
    storageProvider: StorageLocationStorageProvider
)
  
object StorageLocation {
  given encoderStorageLocation: Encoder[StorageLocation] = Encoder.instance { t =>
    Json.fromFields{
      Seq(
        Some("name" -> t.name.asJson),
        Some("storage_provider" -> t.storageProvider.asJson)
      ).flatten
    }
  }
  given decoderStorageLocation: Decoder[StorageLocation] = Decoder.instance { c =>
    for {
      name <- c.downField("name").as[String]
      storageProvider <- c.downField("storage_provider").as[StorageLocationStorageProvider]
    } yield StorageLocation(
      name = name,
      storageProvider = storageProvider
    )
  }
}

