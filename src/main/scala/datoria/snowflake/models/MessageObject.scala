/** merged spec
  * merged spec
  *
  * The version of the OpenAPI document: 1.0.0
  * Contact: team@openapitools.org
  *
  * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
  * https://openapi-generator.tech
  * Do not edit the class manually.
  */
package datoria.snowflake.models

import io.circe.*
import io.circe.syntax.*
import io.circe.{Decoder, Encoder}

import scala.collection.immutable.Seq

/** Represents a message within a chat.
  * @param role 
  * @param content The content of the message in array of text or SQL.
  */
case class MessageObject(
    role: Option[MessageObjectRole] = None,
    content: Seq[MessageContent]
)
  
object MessageObject {
  given encoderMessageObject: Encoder[MessageObject] = Encoder.instance { t =>
    Json.fromFields{
      Seq(
        t.role.map(v => "role" -> v.asJson),
        Some("content" -> t.content.asJson)
      ).flatten
    }
  }
  given decoderMessageObject: Decoder[MessageObject] = Decoder.instance { c =>
    for {
      role <- c.downField("role").as[Option[MessageObjectRole]]
      content <- c.downField("content").as[Seq[MessageContent]]
    } yield MessageObject(
      role = role,
      content = content
    )
  }
}

