/** merged spec
  * merged spec
  *
  * The version of the OpenAPI document: 1.0.0
  * Contact: team@openapitools.org
  *
  * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
  * https://openapi-generator.tech
  * Do not edit the class manually.
  */
package datoria.snowflake.models

import io.circe.*
import io.circe.syntax.*
import io.circe.{Decoder, Encoder}


/** Indicates whether the presigned url is used for file uploading or downloading. Can be `upload` or `download`. Default to `download`.
  */
enum PresignedUrlRequestMode(val value: String) {
  case Upload extends PresignedUrlRequestMode("upload")
  case Download extends PresignedUrlRequestMode("download")
}

object PresignedUrlRequestMode {

  def withValueOpt(value: String): Option[PresignedUrlRequestMode] = PresignedUrlRequestMode.values.find(_.value == value)
  def withValue(value: String): PresignedUrlRequestMode =
    withValueOpt(value).getOrElse(throw java.lang.IllegalArgumentException(s"PresignedUrlRequestMode enum case not found: $value"))

  given decoderPresignedUrlRequestMode: Decoder[PresignedUrlRequestMode] = Decoder.decodeString.map(withValue)
  given encoderPresignedUrlRequestMode: Encoder[PresignedUrlRequestMode] = Encoder.encodeString.contramap[PresignedUrlRequestMode](_.value)

}

