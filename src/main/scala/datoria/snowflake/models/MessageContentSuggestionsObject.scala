/** merged spec
  * merged spec
  *
  * The version of the OpenAPI document: 1.0.0
  * Contact: team@openapitools.org
  *
  * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
  * https://openapi-generator.tech
  * Do not edit the class manually.
  */
package datoria.snowflake.models

import io.circe.*
import io.circe.syntax.*
import io.circe.{Decoder, Encoder}

import scala.collection.immutable.Seq

/** 
  * @param suggestions 
  */
case class MessageContentSuggestionsObject(
    suggestions: Seq[String]
)
  
object MessageContentSuggestionsObject {
  given encoderMessageContentSuggestionsObject: Encoder[MessageContentSuggestionsObject] = Encoder.instance { t =>
    Json.fromFields{
      Seq(
        Some("suggestions" -> t.suggestions.asJson)
      ).flatten
    }
  }
  given decoderMessageContentSuggestionsObject: Decoder[MessageContentSuggestionsObject] = Decoder.instance { c =>
    for {
      suggestions <- c.downField("suggestions").as[Seq[String]]
    } yield MessageContentSuggestionsObject(
      suggestions = suggestions
    )
  }
}

