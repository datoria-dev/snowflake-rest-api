/** merged spec
  * merged spec
  *
  * The version of the OpenAPI document: 1.0.0
  * Contact: team@openapitools.org
  *
  * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
  * https://openapi-generator.tech
  * Do not edit the class manually.
  */
package datoria.snowflake.models

import io.circe.*
import io.circe.syntax.*
import io.circe.{Decoder, Encoder}

import scala.collection.immutable.Seq

/** 
  * @param callArguments Call Argument list
  */
case class CallArgumentList(
    callArguments: Seq[CallArgument]
)
  
object CallArgumentList {
  given encoderCallArgumentList: Encoder[CallArgumentList] = Encoder.instance { t =>
    Json.fromFields{
      Seq(
        Some("call_arguments" -> t.callArguments.asJson)
      ).flatten
    }
  }
  given decoderCallArgumentList: Decoder[CallArgumentList] = Decoder.instance { c =>
    for {
      callArguments <- c.downField("call_arguments").as[Seq[CallArgument]]
    } yield CallArgumentList(
      callArguments = callArguments
    )
  }
}

