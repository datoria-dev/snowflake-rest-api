/** merged spec
  * merged spec
  *
  * The version of the OpenAPI document: 1.0.0
  * Contact: team@openapitools.org
  *
  * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
  * https://openapi-generator.tech
  * Do not edit the class manually.
  */
package datoria.snowflake.models

import io.circe.*
import io.circe.syntax.*
import io.circe.{Decoder, Encoder}


/** Specifies the schedule for periodically running the task.
  * @param `type` Type of lag, can be either USER_DEFINED or DOWNSTREAM.
  */
case class TargetLag(
    `type`: Option[String] = None
)
  
object TargetLag {
  given encoderTargetLag: Encoder[TargetLag] = Encoder.instance { t =>
    Json.fromFields{
      Seq(
        t.`type`.map(v => "type" -> v.asJson)
      ).flatten
    }
  }
  given decoderTargetLag: Decoder[TargetLag] = Decoder.instance { c =>
    for {
      `type` <- c.downField("type").as[Option[String]]
    } yield TargetLag(
      `type` = `type`
    )
  }
}

