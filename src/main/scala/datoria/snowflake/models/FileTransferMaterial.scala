/** merged spec
  * merged spec
  *
  * The version of the OpenAPI document: 1.0.0
  * Contact: team@openapitools.org
  *
  * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
  * https://openapi-generator.tech
  * Do not edit the class manually.
  */
package datoria.snowflake.models

import io.circe.*
import io.circe.syntax.*
import io.circe.{Decoder, Encoder}


/** Materials for uploading and downloading stage files
  * @param presignedUrl Presigned url for file transfer, only works for Server Side Encrypted Stages.
  */
case class FileTransferMaterial(
    presignedUrl: Option[String] = None
)
  
object FileTransferMaterial {
  given encoderFileTransferMaterial: Encoder[FileTransferMaterial] = Encoder.instance { t =>
    Json.fromFields{
      Seq(
        t.presignedUrl.map(v => "presigned_url" -> v.asJson)
      ).flatten
    }
  }
  given decoderFileTransferMaterial: Decoder[FileTransferMaterial] = Decoder.instance { c =>
    for {
      presignedUrl <- c.downField("presigned_url").as[Option[String]]
    } yield FileTransferMaterial(
      presignedUrl = presignedUrl
    )
  }
}

