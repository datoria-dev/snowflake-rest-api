/** merged spec
  * merged spec
  *
  * The version of the OpenAPI document: 1.0.0
  * Contact: team@openapitools.org
  *
  * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
  * https://openapi-generator.tech
  * Do not edit the class manually.
  */
package datoria.snowflake.models

import io.circe.*
import io.circe.syntax.*
import io.circe.{Decoder, Encoder}

import java.time.Instant

/** 
  * @param createdOn Date and time when the service role was created
  * @param name Service role name
  * @param comment Comment, if any, for the service role
  */
case class ServiceRole(
    createdOn: Option[Instant] = None,
    name: Option[String] = None,
    comment: Option[String] = None
)
  
object ServiceRole {
  given encoderServiceRole: Encoder[ServiceRole] = Encoder.instance { t =>
    Json.fromFields{
      Seq(
        t.createdOn.map(v => "created_on" -> v.asJson),
        t.name.map(v => "name" -> v.asJson),
        t.comment.map(v => "comment" -> v.asJson)
      ).flatten
    }
  }
  given decoderServiceRole: Decoder[ServiceRole] = Decoder.instance { c =>
    for {
      createdOn <- c.downField("created_on").as[Option[Instant]]
      name <- c.downField("name").as[Option[String]]
      comment <- c.downField("comment").as[Option[String]]
    } yield ServiceRole(
      createdOn = createdOn,
      name = name,
      comment = comment
    )
  }
}

