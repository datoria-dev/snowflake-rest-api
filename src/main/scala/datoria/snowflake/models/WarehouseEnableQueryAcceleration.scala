/** merged spec
  * merged spec
  *
  * The version of the OpenAPI document: 1.0.0
  * Contact: team@openapitools.org
  *
  * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
  * https://openapi-generator.tech
  * Do not edit the class manually.
  */
package datoria.snowflake.models

import io.circe.*
import io.circe.syntax.*
import io.circe.{Decoder, Encoder}


/** Specifies whether to enable the query acceleration service for queries that rely on this warehouse for compute resources
  */
enum WarehouseEnableQueryAcceleration(val value: String) {
  case `True` extends WarehouseEnableQueryAcceleration("true")
  case `False` extends WarehouseEnableQueryAcceleration("false")
}

object WarehouseEnableQueryAcceleration {

  def withValueOpt(value: String): Option[WarehouseEnableQueryAcceleration] = WarehouseEnableQueryAcceleration.values.find(_.value == value)
  def withValue(value: String): WarehouseEnableQueryAcceleration =
    withValueOpt(value).getOrElse(throw java.lang.IllegalArgumentException(s"WarehouseEnableQueryAcceleration enum case not found: $value"))

  given decoderWarehouseEnableQueryAcceleration: Decoder[WarehouseEnableQueryAcceleration] = Decoder.decodeString.map(withValue)
  given encoderWarehouseEnableQueryAcceleration: Encoder[WarehouseEnableQueryAcceleration] = Encoder.encodeString.contramap[WarehouseEnableQueryAcceleration](_.value)

}

