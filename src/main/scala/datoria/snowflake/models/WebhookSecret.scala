/** merged spec
  * merged spec
  *
  * The version of the OpenAPI document: 1.0.0
  * Contact: team@openapitools.org
  *
  * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
  * https://openapi-generator.tech
  * Do not edit the class manually.
  */
package datoria.snowflake.models

import io.circe.*
import io.circe.syntax.*
import io.circe.{Decoder, Encoder}


/** 
  * @param name The name of the secret.
  * @param databaseName The database which stores the secret.
  * @param schemaName The schema which stores the secret.
  */
case class WebhookSecret(
    name: String,
    databaseName: String,
    schemaName: String
)
  
object WebhookSecret {
  given encoderWebhookSecret: Encoder[WebhookSecret] = Encoder.instance { t =>
    Json.fromFields{
      Seq(
        Some("name" -> t.name.asJson),
        Some("database_name" -> t.databaseName.asJson),
        Some("schema_name" -> t.schemaName.asJson)
      ).flatten
    }
  }
  given decoderWebhookSecret: Decoder[WebhookSecret] = Decoder.instance { c =>
    for {
      name <- c.downField("name").as[String]
      databaseName <- c.downField("database_name").as[String]
      schemaName <- c.downField("schema_name").as[String]
    } yield WebhookSecret(
      name = name,
      databaseName = databaseName,
      schemaName = schemaName
    )
  }
}

