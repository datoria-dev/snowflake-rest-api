/** merged spec
  * merged spec
  *
  * The version of the OpenAPI document: 1.0.0
  * Contact: team@openapitools.org
  *
  * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
  * https://openapi-generator.tech
  * Do not edit the class manually.
  */
package datoria.snowflake.models

import io.circe.*
import io.circe.syntax.*
import io.circe.{Decoder, Encoder}


/** Specifies the credentials of the stage.
  * @param credentialType Type of the credential, can be either AWS or AZURE.
  */
case class Credentials(
    credentialType: Option[String] = None
)
  
object Credentials {
  given encoderCredentials: Encoder[Credentials] = Encoder.instance { t =>
    Json.fromFields{
      Seq(
        t.credentialType.map(v => "credential_type" -> v.asJson)
      ).flatten
    }
  }
  given decoderCredentials: Decoder[Credentials] = Decoder.instance { c =>
    for {
      credentialType <- c.downField("credential_type").as[Option[String]]
    } yield Credentials(
      credentialType = credentialType
    )
  }
}

