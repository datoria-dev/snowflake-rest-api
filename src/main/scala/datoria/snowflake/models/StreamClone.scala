/** merged spec
  * merged spec
  *
  * The version of the OpenAPI document: 1.0.0
  * Contact: team@openapitools.org
  *
  * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
  * https://openapi-generator.tech
  * Do not edit the class manually.
  */
package datoria.snowflake.models

import io.circe.*
import io.circe.syntax.*
import io.circe.{Decoder, Encoder}


/** 
  * @param name Name of the stream
  * @param comment user comment associated to an object in the dictionary
  */
case class StreamClone(
    name: String,
    comment: Option[String] = None
)
  
object StreamClone {
  given encoderStreamClone: Encoder[StreamClone] = Encoder.instance { t =>
    Json.fromFields{
      Seq(
        Some("name" -> t.name.asJson),
        t.comment.map(v => "comment" -> v.asJson)
      ).flatten
    }
  }
  given decoderStreamClone: Decoder[StreamClone] = Decoder.instance { c =>
    for {
      name <- c.downField("name").as[String]
      comment <- c.downField("comment").as[Option[String]]
    } yield StreamClone(
      name = name,
      comment = comment
    )
  }
}

