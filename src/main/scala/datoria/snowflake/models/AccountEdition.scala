/** merged spec
  * merged spec
  *
  * The version of the OpenAPI document: 1.0.0
  * Contact: team@openapitools.org
  *
  * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
  * https://openapi-generator.tech
  * Do not edit the class manually.
  */
package datoria.snowflake.models

import io.circe.*
import io.circe.syntax.*
import io.circe.{Decoder, Encoder}


/** Snowflake Edition of the account.
  */
enum AccountEdition(val value: String) {
  case STANDARD extends AccountEdition("STANDARD")
  case ENTERPRISE extends AccountEdition("ENTERPRISE")
  case BUSINESSCRITICAL extends AccountEdition("BUSINESS_CRITICAL")
}

object AccountEdition {

  def withValueOpt(value: String): Option[AccountEdition] = AccountEdition.values.find(_.value == value)
  def withValue(value: String): AccountEdition =
    withValueOpt(value).getOrElse(throw java.lang.IllegalArgumentException(s"AccountEdition enum case not found: $value"))

  given decoderAccountEdition: Decoder[AccountEdition] = Decoder.decodeString.map(withValue)
  given encoderAccountEdition: Encoder[AccountEdition] = Encoder.encodeString.contramap[AccountEdition](_.value)

}

