/** merged spec
  * merged spec
  *
  * The version of the OpenAPI document: 1.0.0
  * Contact: team@openapitools.org
  *
  * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
  * https://openapi-generator.tech
  * Do not edit the class manually.
  */
package datoria.snowflake.models

import io.circe.*
import io.circe.syntax.*
import io.circe.{Decoder, Encoder}


/** Encryption parameters of the stage.
  * @param `type` 
  * @param masterKey Specifies the client-side master key used to encrypt the files in the bucket. The master key must be a 128-bit or 256-bit key in Base64-encoded form.
  * @param kmsKeyId Optionally specifies the ID for the KMS-managed key used to encrypt files unloaded into the bucket.
  */
case class StageEncryption(
    `type`: Option[StageEncryptionType] = None,
    masterKey: Option[String] = None,
    kmsKeyId: Option[String] = None
)
  
object StageEncryption {
  given encoderStageEncryption: Encoder[StageEncryption] = Encoder.instance { t =>
    Json.fromFields{
      Seq(
        t.`type`.map(v => "type" -> v.asJson),
        t.masterKey.map(v => "master_key" -> v.asJson),
        t.kmsKeyId.map(v => "kms_key_id" -> v.asJson)
      ).flatten
    }
  }
  given decoderStageEncryption: Decoder[StageEncryption] = Decoder.instance { c =>
    for {
      `type` <- c.downField("type").as[Option[StageEncryptionType]]
      masterKey <- c.downField("master_key").as[Option[String]]
      kmsKeyId <- c.downField("kms_key_id").as[Option[String]]
    } yield StageEncryption(
      `type` = `type`,
      masterKey = masterKey,
      kmsKeyId = kmsKeyId
    )
  }
}

