/** merged spec
  * merged spec
  *
  * The version of the OpenAPI document: 1.0.0
  * Contact: team@openapitools.org
  *
  * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
  * https://openapi-generator.tech
  * Do not edit the class manually.
  */
package datoria.snowflake.models

import io.circe.*
import io.circe.syntax.*
import io.circe.{Decoder, Encoder}


/** Request object to get presigned url of a file
  * @param mode 
  * @param expirationTime Expiration time of the generated presigned url in seconds.
  */
case class PresignedUrlRequest(
    mode: Option[PresignedUrlRequestMode] = None,
    expirationTime: Option[Int] = None
)
  
object PresignedUrlRequest {
  given encoderPresignedUrlRequest: Encoder[PresignedUrlRequest] = Encoder.instance { t =>
    Json.fromFields{
      Seq(
        t.mode.map(v => "mode" -> v.asJson),
        t.expirationTime.map(v => "expiration_time" -> v.asJson)
      ).flatten
    }
  }
  given decoderPresignedUrlRequest: Decoder[PresignedUrlRequest] = Decoder.instance { c =>
    for {
      mode <- c.downField("mode").as[Option[PresignedUrlRequestMode]]
      expirationTime <- c.downField("expiration_time").as[Option[Int]]
    } yield PresignedUrlRequest(
      mode = mode,
      expirationTime = expirationTime
    )
  }
}

