/** merged spec
  * merged spec
  *
  * The version of the OpenAPI document: 1.0.0
  * Contact: team@openapitools.org
  *
  * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
  * https://openapi-generator.tech
  * Do not edit the class manually.
  */
package datoria.snowflake.models

import io.circe.*
import io.circe.syntax.*
import io.circe.{Decoder, Encoder}


/** Specifies the schedule for periodically running the task.
  * @param scheduleType Type of the schedule, can be either CRON_TYPE or MINUTES_TYPE.
  */
case class TaskSchedule(
    scheduleType: Option[String] = None
)
  
object TaskSchedule {
  given encoderTaskSchedule: Encoder[TaskSchedule] = Encoder.instance { t =>
    Json.fromFields{
      Seq(
        t.scheduleType.map(v => "schedule_type" -> v.asJson)
      ).flatten
    }
  }
  given decoderTaskSchedule: Decoder[TaskSchedule] = Decoder.instance { c =>
    for {
      scheduleType <- c.downField("schedule_type").as[Option[String]]
    } yield TaskSchedule(
      scheduleType = scheduleType
    )
  }
}

