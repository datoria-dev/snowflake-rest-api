/** merged spec
  * merged spec
  *
  * The version of the OpenAPI document: 1.0.0
  * Contact: team@openapitools.org
  *
  * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
  * https://openapi-generator.tech
  * Do not edit the class manually.
  */
package datoria.snowflake.models

import io.circe.*
import io.circe.syntax.*
import io.circe.{Decoder, Encoder}

import scala.collection.immutable.Seq

/** 
  * @param targetPath Specifies where Snowflake should write the compiled code for inline function/procedures
  * @param runtimeVersion Specifies the Scala runtime version to use. The supported versions of Scala are: 2.12
  */
case class ScalaFunction1(
    targetPath: Option[String] = None,
    runtimeVersion: String
)
  
object ScalaFunction1 {
  given encoderScalaFunction1: Encoder[ScalaFunction1] = Encoder.instance { t =>
    Json.fromFields{
      Seq(
        t.targetPath.map(v => "target_path" -> v.asJson),
        Some("runtime_version" -> t.runtimeVersion.asJson)
      ).flatten
    }
  }
  given decoderScalaFunction1: Decoder[ScalaFunction1] = Decoder.instance { c =>
    for {
      targetPath <- c.downField("target_path").as[Option[String]]
      runtimeVersion <- c.downField("runtime_version").as[String]
    } yield ScalaFunction1(
      targetPath = targetPath,
      runtimeVersion = runtimeVersion
    )
  }
}

